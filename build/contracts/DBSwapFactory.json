{
  "contractName": "DBSwapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/uniswap-v2-core/DBSwapFactory.sol\":\"DBSwapFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":25500},\"remappings\":[]},\"sources\":{\"project:/contracts/uniswap-v2-core/DBSwapERC20.sol\":{\"keccak256\":\"0xc10556492ed71e25f0555db9c4cd86ae5ca3cdfb4ca413a5658a1252d27ad2e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74cfb92594bed390204c072d8d2dd069919c45d62d315180a3dfe2b31b49c7fb\",\"dweb:/ipfs/QmSAC2wJMb8ShFixNrAovH1UiADqrQQWiFnvD1PtzqKhUW\"]},\"project:/contracts/uniswap-v2-core/DBSwapFactory.sol\":{\"keccak256\":\"0xcefe1021c796395a0e31397c37f0a08864af9296cfa30f42555dc5a739960cc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d2926e3ef7413171266b1950caf32e24b9f306ea2ef6652168352d9c0541919\",\"dweb:/ipfs/QmbtAuG1YwR6s1sh1jvbmUjkk4HjvJqdZtcjycAVvZ5ySr\"]},\"project:/contracts/uniswap-v2-core/DBSwapPair.sol\":{\"keccak256\":\"0x3664fd1de15a911ca7ba9d7199ef6a0bc641296b51b349090191600360aee2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3278cd5d968ff5865287f9630c26d81fdfb831566877bb0ccad24b0f80fa9baf\",\"dweb:/ipfs/QmWoXoJPMC3Zxyq3SSHsy1uwbpCw5Ga3LcfsmX3e32Yq5a\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapCallee.sol\":{\"keccak256\":\"0xb7d509561329857d914894dd92de5ef4819d85c663a0b12423f66497c2a82b7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9a5279a3f6458b68ead556bcd525fa3f5ef5e9d8bfcb70b6ed45a7448151cf\",\"dweb:/ipfs/QmdxjxSnv8yvV6kuSjsYVy1sAxfNEEQny22GoXGTHpUtVi\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapERC20.sol\":{\"keccak256\":\"0xbcf4485707d6e381f532aef2464e7ffe2a272b8fbdcae8f7d199449e68882c3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c80b94b1951c0a66d522f394176e90665f3a3fc7ea7f425d69e3ce0b1adb277\",\"dweb:/ipfs/QmZTHcW13UYSa2kTGx6fya5heDHopLuryM1yxdejqMcgJz\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol\":{\"keccak256\":\"0xeade8bd9e7f87f3e62db33cc4ab4c8f1b62ce09168d1f8d4c661dcd0605bd599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d70e754985298fa431307ee342e574570ffb8e0501839526f39e27a9e01ddf\",\"dweb:/ipfs/QmQXqgDq5CRr4jTFyka4g6QyXE2HNqASbbSdsy7KXLFHgN\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapPair.sol\":{\"keccak256\":\"0x0f2b71a7e619a22f0b79ddac1ed647d057b74f17ca3bfdb2d314065ac502e7e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dddc3c5d7c0868ca4671427d0a083ba925cf44055b864cf8b23710d89ee687a2\",\"dweb:/ipfs/Qmasu6j1fWUr7i6xmpQDBjoociZwk1A3tyuZfVgqTxbXqV\"]},\"project:/contracts/uniswap-v2-core/interfaces/IERC20.sol\":{\"keccak256\":\"0xa3b3d014c91b6166a87dadf02b245bbe08ee0f8640e7b072437c5bfd2a7266b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395333c0e19be86360f9f7966daa9944a880f2aff1b0d96ace5711156c4d2136\",\"dweb:/ipfs/QmcYpuVrpYMqnpMgdpv7ByxMSf7zNEwkpR4oW47UQU2eZL\"]},\"project:/contracts/uniswap-v2-core/libraries/Math.sol\":{\"keccak256\":\"0x764923240a56f4d72085f95432a6ab6cc4a0bcecaf6b66f6a55b13cba96ea7f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5dee1c19898ff4ef8d45cf6a1d25ce69456f61cfe869f4ea3162d1961eda99\",\"dweb:/ipfs/Qmdtfrzh2BENBYMa8KZPdrS5P47Yy9kWpmiWn8chK4Auwz\"]},\"project:/contracts/uniswap-v2-core/libraries/UQ112x112.sol\":{\"keccak256\":\"0x01780ab266f5b39c18b643fc1012e3c3c579a95fb90c598bdb9d698c0a958bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b7aac7986324ee1f7ee6265fe1d3aa7dc060e08401f51143b9de2ff07877b23\",\"dweb:/ipfs/QmbbMvX6rNQjNSuB3xowieeGkgt37zzWGYAqn6dVb34UVo\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161362b38038061362b83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b613598806100936000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af61461011b578063c9c6539614610130578063e6a4390514610143578063f46901ed1461018457600080fd5b8063017e7e581461008d578063094b7415146100d75780631e3dd18b146100f7578063574f2ba31461010a575b600080fd5b6000546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6001546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ad61010536600461078e565b610197565b6003546040519081526020016100ce565b61012e6101293660046107d0565b6101ce565b005b6100ad61013e3660046107f2565b61029b565b6100ad6101513660046107f2565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61012e6101923660046107d0565b6106b9565b600381815481106101a757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff163314610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e00000000000000000000000000000060448201526064015b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4442537761703a204944454e544943414c5f4144445245535345530000000000604482015260640161024b565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610370578385610373565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff82166103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4442537761703a205a45524f5f41444452455353000000000000000000000000604482015260640161024b565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260026020908152604080832085851684529091529020541615610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4442537761703a20504149525f45584953545300000000000000000000000000604482015260640161024b565b6000604051806020016104a390610781565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526002602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e000000000000000000000000000000604482015260640161024b565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612d3d8061082683390190565b6000602082840312156107a057600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b919050565b6000602082840312156107e257600080fd5b6107eb826107a7565b9392505050565b6000806040838503121561080557600080fd5b61080e836107a7565b915061081c602084016107a7565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600981526844425377617020563160b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527ffce26495083909704b6355e294eebe49a5128863694960a972fcb77ada84dd2d818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612c36806101076000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461049b578063d505accf146104bb578063dd62ed3e146104ce578063fff6cae9146104f957600080fd5b8063ba9a7a561461045f578063bc25cf7714610468578063c45a01551461047b57600080fd5b80637ecebe00116100d35780637ecebe00146103c857806389afcb44146103e857806395d89b4114610410578063a9059cbb1461044c57600080fd5b80636a6278421461038c57806370a082311461039f5780637464fc3d146103bf57600080fd5b806323b872dd116101665780633644e515116101405780633644e5151461035e578063485cc955146103675780635909c0d51461037a5780635a3d54931461038357600080fd5b806323b872dd1461030a57806330adf81f1461031d578063313ce5671461034457600080fd5b8063095ea7b311610197578063095ea7b31461028b5780630dfe1681146102ae57806318160ddd146102f357600080fd5b8063022c0d9f146101be57806306fdde03146101d35780630902f1ac14610225575b600080fd5b6101d16101cc3660046126c7565b610501565b005b61020f6040518060400160405280600981526020017f444253776170205631000000000000000000000000000000000000000000000081525081565b60405161021c919061278d565b60405180910390f35b600854604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff169082015260600161021c565b61029e6102993660046127de565b610c49565b604051901515815260200161021c565b6006546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021c565b6102fc60005481565b60405190815260200161021c565b61029e61031836600461280a565b610c5f565b6102fc7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61034c601281565b60405160ff909116815260200161021c565b6102fc60035481565b6101d161037536600461284b565b610d39565b6102fc60095481565b6102fc600a5481565b6102fc61039a366004612884565b610e0d565b6102fc6103ad366004612884565b60016020526000908152604090205481565b6102fc600b5481565b6102fc6103d6366004612884565b60046020526000908152604090205481565b6103fb6103f6366004612884565b6111f9565b6040805192835260208301919091520161021c565b61020f6040518060400160405280600581526020017f44422d563100000000000000000000000000000000000000000000000000000081525081565b61029e61045a3660046127de565b6116c0565b6102fc6103e881565b6101d1610476366004612884565b6116cd565b6005546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d16104c93660046128a1565b61188f565b6102fc6104dc36600461284b565b600260209081526000928352604080842090915290825290205481565b6101d1611b7a565b600c54600114610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b454400000000000000000000000000000000000060448201526064015b60405180910390fd5b6000600c55841515806105855750600084115b610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4442537761703a20494e53554646494349454e545f4f55545055545f414d4f5560448201527f4e540000000000000000000000000000000000000000000000000000000000006064820152608401610569565b60008061066d6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff16871080156106a05750806dffffffffffffffffffffffffffff1686105b610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4442537761703a20494e53554646494349454e545f4c495155494449545900006044820152606401610569565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061076b57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4442537761703a20494e56414c49445f544f00000000000000000000000000006044820152606401610569565b8a156107e2576107e2828a8d611d46565b89156107f3576107f3818a8c611d46565b8615610886576040517f17838daf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16906317838daf906108539033908f908f908e908e90600401612918565b600060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190612990565b92505050600089856dffffffffffffffffffffffffffff166109c791906129d8565b83116109d45760006109f8565b6109ee8a6dffffffffffffffffffffffffffff87166129d8565b6109f890846129d8565b90506000610a168a6dffffffffffffffffffffffffffff87166129d8565b8311610a23576000610a47565b610a3d8a6dffffffffffffffffffffffffffff87166129d8565b610a4790846129d8565b90506000821180610a585750600081115b610ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4442537761703a20494e53554646494349454e545f494e5055545f414d4f554e60448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610569565b6000610af18360036129ef565b610afd866103e86129ef565b610b0791906129d8565b90506000610b168360036129ef565b610b22866103e86129ef565b610b2c91906129d8565b9050610b388789612a2c565b610b4590620f4240612a2c565b6dffffffffffffffffffffffffffff16610b5f82846129ef565b1015610bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4442537761703a204b00000000000000000000000000000000000000000000006044820152606401610569565b5050610bd584848888611ee6565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610c563384846121c2565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610d245773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610cf29083906129d8565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610d2f848484612231565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610dba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e0000000000000000000000000000006044820152606401610569565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600c54600114610e7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c819055600854600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a082319160248083019260209291908290030181865afa158015610f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f459190612990565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190612990565b90506000610ffb6dffffffffffffffffffffffffffff8616846129d8565b905060006110196dffffffffffffffffffffffffffff8616846129d8565b905060006110278787612300565b60005490915080611065576103e861104761104285876129ef565b61246f565b61105191906129d8565b985061106060006103e86124df565b6110ba565b6110b76dffffffffffffffffffffffffffff891661108383876129ef565b61108d9190612a91565b6dffffffffffffffffffffffffffff89166110a884876129ef565b6110b29190612a91565b61258a565b98505b6000891161114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4442537761703a20494e53554646494349454e545f4c49515549444954595f4d60448201527f494e5445440000000000000000000000000000000000000000000000000000006064820152608401610569565b6111548a8a6124df565b61116086868a8a611ee6565b81156111ab57600854611197906dffffffffffffffffffffffffffff6e010000000000000000000000000000820481169116612a2c565b6dffffffffffffffffffffffffffff16600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114611268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c819055600854600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a08231916024808201926020929091908290030181865afa15801561131a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133e9190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156113ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d29190612990565b306000908152600160205260408120549192506113ef8888612300565b6000549091508061140086856129ef565b61140a9190612a91565b9a508061141785856129ef565b6114219190612a91565b995060008b118015611433575060008a115b6114bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4442537761703a20494e53554646494349454e545f4c49515549444954595f4260448201527f55524e45440000000000000000000000000000000000000000000000000000006064820152608401610569565b6114c930846125a2565b6114d4878d8d611d46565b6114df868d8c611d46565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8816906370a0823190602401602060405180830381865afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290955073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190612990565b935061160c85858b8b611ee6565b811561165757600854611643906dffffffffffffffffffffffffffff6e010000000000000000000000000000820481169116612a2c565b6dffffffffffffffffffffffffffff16600b555b604080518c8152602081018c905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610c56338484612231565b600c54600114611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c556006546007546008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff938416939092169161180591849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa1580156117d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f69190612990565b61180091906129d8565b611d46565b6008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015261188591839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a08231906024016117b5565b50506001600c5550565b428410156118f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4442537761703a204558504952454400000000000000000000000000000000006044820152606401610569565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761195983612aa5565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016119fa9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611a83573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611afe57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611b64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4442537761703a20494e56414c49445f5349474e4154555245000000000000006044820152606401610569565b611b6f8989896121c2565b505050505050505050565b600c54600114611be6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611d3f9173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7f9190612990565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d119190612990565b6008546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611ee6565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611e0d9190612ade565b6000604051808303816000865af19150503d8060008114611e4a576040519150601f19603f3d011682016040523d82523d6000602084013e611e4f565b606091505b5091509150818015611e79575080511580611e79575080806020019051810190611e799190612afa565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4442537761703a205452414e534645525f4641494c45440000000000000000006044820152606401610569565b5050505050565b6dffffffffffffffffffffffffffff8411801590611f1257506dffffffffffffffffffffffffffff8311155b611f78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4442537761703a204f564552464c4f57000000000000000000000000000000006044820152606401610569565b6000611f8964010000000042612b1c565b600854909150600090611fc2907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683612b30565b905060008163ffffffff16118015611fe957506dffffffffffffffffffffffffffff841615155b801561200457506dffffffffffffffffffffffffffff831615155b156120d2578063ffffffff166120418561201d86612655565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612686565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661206991906129ef565b6009600082825461207a9190612b55565b909155505063ffffffff81166120938461201d87612655565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166120bb91906129ef565b600a60008282546120cc9190612b55565b90915550505b6008805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546122629082906129d8565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220939093559084168152205461229f908290612b55565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906122249085815260200190565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123949190612b6d565b600b5473ffffffffffffffffffffffffffffffffffffffff821615801594509192509061245b5780156124565760006123e56123d08688612a2c565b6dffffffffffffffffffffffffffff1661246f565b905060006123f28361246f565b90508082111561245357600061240882846129d8565b60005461241591906129ef565b90506000826124258560056129ef565b61242f9190612b55565b9050600061243d8284612a91565b9050801561244f5761244f87826124df565b5050505b50505b612467565b8015612467576000600b555b505092915050565b600060038211156124d05750806000612489600283612a91565b612494906001612b55565b90505b818110156124ca579050806002816124af8186612a91565b6124b99190612b55565b6124c39190612a91565b9050612497565b50919050565b81156124da575060015b919050565b806000546124ed9190612b55565b600090815573ffffffffffffffffffffffffffffffffffffffff8316815260016020526040902054612520908290612b55565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061257e9085815260200190565b60405180910390a35050565b6000818310612599578161259b565b825b9392505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546125d39082906129d8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812091909155546126089082906129d8565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161257e565b60006126806e0100000000000000000000000000006dffffffffffffffffffffffffffff8416612b8a565b92915050565b600061259b6dffffffffffffffffffffffffffff831684612bc5565b73ffffffffffffffffffffffffffffffffffffffff811681146126c457600080fd5b50565b6000806000806000608086880312156126df57600080fd5b853594506020860135935060408601356126f8816126a2565b9250606086013567ffffffffffffffff8082111561271557600080fd5b818801915088601f83011261272957600080fd5b81358181111561273857600080fd5b89602082850101111561274a57600080fd5b9699959850939650602001949392505050565b60005b83811015612778578181015183820152602001612760565b83811115612787576000848401525b50505050565b60208152600082518060208401526127ac81604085016020870161275d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600080604083850312156127f157600080fd5b82356127fc816126a2565b946020939093013593505050565b60008060006060848603121561281f57600080fd5b833561282a816126a2565b9250602084013561283a816126a2565b929592945050506040919091013590565b6000806040838503121561285e57600080fd5b8235612869816126a2565b91506020830135612879816126a2565b809150509250929050565b60006020828403121561289657600080fd5b813561259b816126a2565b600080600080600080600060e0888a0312156128bc57600080fd5b87356128c7816126a2565b965060208801356128d7816126a2565b95506040880135945060608801359350608088013560ff811681146128fb57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b6000602082840312156129a257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156129ea576129ea6129a9565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a2757612a276129a9565b500290565b60006dffffffffffffffffffffffffffff80831681851681830481118215151615612a5957612a596129a9565b02949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612aa057612aa0612a62565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ad757612ad76129a9565b5060010190565b60008251612af081846020870161275d565b9190910192915050565b600060208284031215612b0c57600080fd5b8151801515811461259b57600080fd5b600082612b2b57612b2b612a62565b500690565b600063ffffffff83811690831681811015612b4d57612b4d6129a9565b039392505050565b60008219821115612b6857612b686129a9565b500190565b600060208284031215612b7f57600080fd5b815161259b816126a2565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831681851681830481118215151615612a5957612a596129a9565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80841680612bf457612bf4612a62565b9216919091049291505056fea2646970667358221220b1bf799abc4205a1e0e9ac07257a87d088105f83a9cbc8105cfa9e281d5ec5bd64736f6c634300080a0033a26469706673582212200ee0783cd148008d07feb43e383ab1ff6fca2d07732ecaa7b5e346d11da33d8a64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af61461011b578063c9c6539614610130578063e6a4390514610143578063f46901ed1461018457600080fd5b8063017e7e581461008d578063094b7415146100d75780631e3dd18b146100f7578063574f2ba31461010a575b600080fd5b6000546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6001546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ad61010536600461078e565b610197565b6003546040519081526020016100ce565b61012e6101293660046107d0565b6101ce565b005b6100ad61013e3660046107f2565b61029b565b6100ad6101513660046107f2565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61012e6101923660046107d0565b6106b9565b600381815481106101a757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60015473ffffffffffffffffffffffffffffffffffffffff163314610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e00000000000000000000000000000060448201526064015b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4442537761703a204944454e544943414c5f4144445245535345530000000000604482015260640161024b565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610370578385610373565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff82166103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4442537761703a205a45524f5f41444452455353000000000000000000000000604482015260640161024b565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260026020908152604080832085851684529091529020541615610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4442537761703a20504149525f45584953545300000000000000000000000000604482015260640161024b565b6000604051806020016104a390610781565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526002602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e000000000000000000000000000000604482015260640161024b565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612d3d8061082683390190565b6000602082840312156107a057600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b919050565b6000602082840312156107e257600080fd5b6107eb826107a7565b9392505050565b6000806040838503121561080557600080fd5b61080e836107a7565b915061081c602084016107a7565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600981526844425377617020563160b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527ffce26495083909704b6355e294eebe49a5128863694960a972fcb77ada84dd2d818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612c36806101076000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461049b578063d505accf146104bb578063dd62ed3e146104ce578063fff6cae9146104f957600080fd5b8063ba9a7a561461045f578063bc25cf7714610468578063c45a01551461047b57600080fd5b80637ecebe00116100d35780637ecebe00146103c857806389afcb44146103e857806395d89b4114610410578063a9059cbb1461044c57600080fd5b80636a6278421461038c57806370a082311461039f5780637464fc3d146103bf57600080fd5b806323b872dd116101665780633644e515116101405780633644e5151461035e578063485cc955146103675780635909c0d51461037a5780635a3d54931461038357600080fd5b806323b872dd1461030a57806330adf81f1461031d578063313ce5671461034457600080fd5b8063095ea7b311610197578063095ea7b31461028b5780630dfe1681146102ae57806318160ddd146102f357600080fd5b8063022c0d9f146101be57806306fdde03146101d35780630902f1ac14610225575b600080fd5b6101d16101cc3660046126c7565b610501565b005b61020f6040518060400160405280600981526020017f444253776170205631000000000000000000000000000000000000000000000081525081565b60405161021c919061278d565b60405180910390f35b600854604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff169082015260600161021c565b61029e6102993660046127de565b610c49565b604051901515815260200161021c565b6006546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021c565b6102fc60005481565b60405190815260200161021c565b61029e61031836600461280a565b610c5f565b6102fc7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61034c601281565b60405160ff909116815260200161021c565b6102fc60035481565b6101d161037536600461284b565b610d39565b6102fc60095481565b6102fc600a5481565b6102fc61039a366004612884565b610e0d565b6102fc6103ad366004612884565b60016020526000908152604090205481565b6102fc600b5481565b6102fc6103d6366004612884565b60046020526000908152604090205481565b6103fb6103f6366004612884565b6111f9565b6040805192835260208301919091520161021c565b61020f6040518060400160405280600581526020017f44422d563100000000000000000000000000000000000000000000000000000081525081565b61029e61045a3660046127de565b6116c0565b6102fc6103e881565b6101d1610476366004612884565b6116cd565b6005546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102ce9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d16104c93660046128a1565b61188f565b6102fc6104dc36600461284b565b600260209081526000928352604080842090915290825290205481565b6101d1611b7a565b600c54600114610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b454400000000000000000000000000000000000060448201526064015b60405180910390fd5b6000600c55841515806105855750600084115b610611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4442537761703a20494e53554646494349454e545f4f55545055545f414d4f5560448201527f4e540000000000000000000000000000000000000000000000000000000000006064820152608401610569565b60008061066d6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff16871080156106a05750806dffffffffffffffffffffffffffff1686105b610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4442537761703a20494e53554646494349454e545f4c495155494449545900006044820152606401610569565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061076b57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4442537761703a20494e56414c49445f544f00000000000000000000000000006044820152606401610569565b8a156107e2576107e2828a8d611d46565b89156107f3576107f3818a8c611d46565b8615610886576040517f17838daf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16906317838daf906108539033908f908f908e908e90600401612918565b600060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190612990565b92505050600089856dffffffffffffffffffffffffffff166109c791906129d8565b83116109d45760006109f8565b6109ee8a6dffffffffffffffffffffffffffff87166129d8565b6109f890846129d8565b90506000610a168a6dffffffffffffffffffffffffffff87166129d8565b8311610a23576000610a47565b610a3d8a6dffffffffffffffffffffffffffff87166129d8565b610a4790846129d8565b90506000821180610a585750600081115b610ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4442537761703a20494e53554646494349454e545f494e5055545f414d4f554e60448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610569565b6000610af18360036129ef565b610afd866103e86129ef565b610b0791906129d8565b90506000610b168360036129ef565b610b22866103e86129ef565b610b2c91906129d8565b9050610b388789612a2c565b610b4590620f4240612a2c565b6dffffffffffffffffffffffffffff16610b5f82846129ef565b1015610bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4442537761703a204b00000000000000000000000000000000000000000000006044820152606401610569565b5050610bd584848888611ee6565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610c563384846121c2565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610d245773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610cf29083906129d8565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610d2f848484612231565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610dba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4442537761703a20464f5242494444454e0000000000000000000000000000006044820152606401610569565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600c54600114610e7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c819055600854600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a082319160248083019260209291908290030181865afa158015610f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f459190612990565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190612990565b90506000610ffb6dffffffffffffffffffffffffffff8616846129d8565b905060006110196dffffffffffffffffffffffffffff8616846129d8565b905060006110278787612300565b60005490915080611065576103e861104761104285876129ef565b61246f565b61105191906129d8565b985061106060006103e86124df565b6110ba565b6110b76dffffffffffffffffffffffffffff891661108383876129ef565b61108d9190612a91565b6dffffffffffffffffffffffffffff89166110a884876129ef565b6110b29190612a91565b61258a565b98505b6000891161114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4442537761703a20494e53554646494349454e545f4c49515549444954595f4d60448201527f494e5445440000000000000000000000000000000000000000000000000000006064820152608401610569565b6111548a8a6124df565b61116086868a8a611ee6565b81156111ab57600854611197906dffffffffffffffffffffffffffff6e010000000000000000000000000000820481169116612a2c565b6dffffffffffffffffffffffffffff16600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114611268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c819055600854600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a08231916024808201926020929091908290030181865afa15801561131a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133e9190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156113ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d29190612990565b306000908152600160205260408120549192506113ef8888612300565b6000549091508061140086856129ef565b61140a9190612a91565b9a508061141785856129ef565b6114219190612a91565b995060008b118015611433575060008a115b6114bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4442537761703a20494e53554646494349454e545f4c49515549444954595f4260448201527f55524e45440000000000000000000000000000000000000000000000000000006064820152608401610569565b6114c930846125a2565b6114d4878d8d611d46565b6114df868d8c611d46565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8816906370a0823190602401602060405180830381865afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190612990565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290955073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190612990565b935061160c85858b8b611ee6565b811561165757600854611643906dffffffffffffffffffffffffffff6e010000000000000000000000000000820481169116612a2c565b6dffffffffffffffffffffffffffff16600b555b604080518c8152602081018c905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610c56338484612231565b600c54600114611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c556006546007546008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff938416939092169161180591849186916dffffffffffffffffffffffffffff169083906370a08231906024015b602060405180830381865afa1580156117d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f69190612990565b61180091906129d8565b611d46565b6008546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015261188591839186916e01000000000000000000000000000090046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8416906370a08231906024016117b5565b50506001600c5550565b428410156118f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4442537761703a204558504952454400000000000000000000000000000000006044820152606401610569565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761195983612aa5565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016119fa9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611a83573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611afe57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611b64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4442537761703a20494e56414c49445f5349474e4154555245000000000000006044820152606401610569565b611b6f8989896121c2565b505050505050505050565b600c54600114611be6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4442537761703a204c4f434b45440000000000000000000000000000000000006044820152606401610569565b6000600c556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611d3f9173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7f9190612990565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d119190612990565b6008546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611ee6565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611e0d9190612ade565b6000604051808303816000865af19150503d8060008114611e4a576040519150601f19603f3d011682016040523d82523d6000602084013e611e4f565b606091505b5091509150818015611e79575080511580611e79575080806020019051810190611e799190612afa565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4442537761703a205452414e534645525f4641494c45440000000000000000006044820152606401610569565b5050505050565b6dffffffffffffffffffffffffffff8411801590611f1257506dffffffffffffffffffffffffffff8311155b611f78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4442537761703a204f564552464c4f57000000000000000000000000000000006044820152606401610569565b6000611f8964010000000042612b1c565b600854909150600090611fc2907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683612b30565b905060008163ffffffff16118015611fe957506dffffffffffffffffffffffffffff841615155b801561200457506dffffffffffffffffffffffffffff831615155b156120d2578063ffffffff166120418561201d86612655565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612686565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661206991906129ef565b6009600082825461207a9190612b55565b909155505063ffffffff81166120938461201d87612655565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166120bb91906129ef565b600a60008282546120cc9190612b55565b90915550505b6008805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546122629082906129d8565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220939093559084168152205461229f908290612b55565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906122249085815260200190565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123949190612b6d565b600b5473ffffffffffffffffffffffffffffffffffffffff821615801594509192509061245b5780156124565760006123e56123d08688612a2c565b6dffffffffffffffffffffffffffff1661246f565b905060006123f28361246f565b90508082111561245357600061240882846129d8565b60005461241591906129ef565b90506000826124258560056129ef565b61242f9190612b55565b9050600061243d8284612a91565b9050801561244f5761244f87826124df565b5050505b50505b612467565b8015612467576000600b555b505092915050565b600060038211156124d05750806000612489600283612a91565b612494906001612b55565b90505b818110156124ca579050806002816124af8186612a91565b6124b99190612b55565b6124c39190612a91565b9050612497565b50919050565b81156124da575060015b919050565b806000546124ed9190612b55565b600090815573ffffffffffffffffffffffffffffffffffffffff8316815260016020526040902054612520908290612b55565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061257e9085815260200190565b60405180910390a35050565b6000818310612599578161259b565b825b9392505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546125d39082906129d8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812091909155546126089082906129d8565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161257e565b60006126806e0100000000000000000000000000006dffffffffffffffffffffffffffff8416612b8a565b92915050565b600061259b6dffffffffffffffffffffffffffff831684612bc5565b73ffffffffffffffffffffffffffffffffffffffff811681146126c457600080fd5b50565b6000806000806000608086880312156126df57600080fd5b853594506020860135935060408601356126f8816126a2565b9250606086013567ffffffffffffffff8082111561271557600080fd5b818801915088601f83011261272957600080fd5b81358181111561273857600080fd5b89602082850101111561274a57600080fd5b9699959850939650602001949392505050565b60005b83811015612778578181015183820152602001612760565b83811115612787576000848401525b50505050565b60208152600082518060208401526127ac81604085016020870161275d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600080604083850312156127f157600080fd5b82356127fc816126a2565b946020939093013593505050565b60008060006060848603121561281f57600080fd5b833561282a816126a2565b9250602084013561283a816126a2565b929592945050506040919091013590565b6000806040838503121561285e57600080fd5b8235612869816126a2565b91506020830135612879816126a2565b809150509250929050565b60006020828403121561289657600080fd5b813561259b816126a2565b600080600080600080600060e0888a0312156128bc57600080fd5b87356128c7816126a2565b965060208801356128d7816126a2565b95506040880135945060608801359350608088013560ff811681146128fb57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b6000602082840312156129a257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156129ea576129ea6129a9565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a2757612a276129a9565b500290565b60006dffffffffffffffffffffffffffff80831681851681830481118215151615612a5957612a596129a9565b02949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612aa057612aa0612a62565b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ad757612ad76129a9565b5060010190565b60008251612af081846020870161275d565b9190910192915050565b600060208284031215612b0c57600080fd5b8151801515811461259b57600080fd5b600082612b2b57612b2b612a62565b500690565b600063ffffffff83811690831681811015612b4d57612b4d6129a9565b039392505050565b60008219821115612b6857612b686129a9565b500190565b600060208284031215612b7f57600080fd5b815161259b816126a2565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831681851681830481118215151615612a5957612a596129a9565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80841680612bf457612bf4612a62565b9216919091049291505056fea2646970667358221220b1bf799abc4205a1e0e9ac07257a87d088105f83a9cbc8105cfa9e281d5ec5bd64736f6c634300080a0033a26469706673582212200ee0783cd148008d07feb43e383ab1ff6fca2d07732ecaa7b5e346d11da33d8a64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:33"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:33",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:33"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:33",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:33",
                "type": ""
              }
            ],
            "src": "14:290:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3672:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:33",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:33",
                "type": ""
              }
            ],
            "src": "14:226:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:110:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "386:33:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "409:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "396:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:23:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "386:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:33",
                "type": ""
              }
            ],
            "src": "245:180:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:76:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "553:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "564:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "549:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "541:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "583:9:33"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "594:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:25:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:25:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "500:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "511:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "522:4:33",
                "type": ""
              }
            ],
            "src": "430:177:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "661:147:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "671:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "693:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "680:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:20:33"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "671:5:33"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "786:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "795:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "798:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "788:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "788:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "788:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "722:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "733:5:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "740:42:33",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "729:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "729:54:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "719:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:65:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "712:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "712:73:33"
                  },
                  "nodeType": "YulIf",
                  "src": "709:93:33"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "640:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "651:5:33",
                "type": ""
              }
            ],
            "src": "612:196:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "883:116:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "929:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "938:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "941:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "931:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "931:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "931:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "904:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "913:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "900:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "925:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "896:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "893:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "954:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "983:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "964:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "954:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "849:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "860:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "872:6:33",
                "type": ""
              }
            ],
            "src": "813:186:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1091:173:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1137:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1149:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1139:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1112:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1121:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1108:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1108:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1133:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1104:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "1101:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1162:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1191:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1172:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1162:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1210:48:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1243:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1254:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1239:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1239:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1220:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:38:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1049:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1060:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1072:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1080:6:33",
                "type": ""
              }
            ],
            "src": "1004:260:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:167:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1460:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1471:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1453:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1453:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1494:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1505:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:2:33",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1483:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1533:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1544:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1529:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1529:18:33"
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1549:19:33",
                        "type": "",
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1522:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1522:47:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1522:47:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1578:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1590:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1601:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1586:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1578:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1420:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1434:4:33",
                "type": ""
              }
            ],
            "src": "1269:341:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:177:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1806:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1817:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1799:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1799:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1799:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1840:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1851:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1836:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1856:2:33",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1829:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1829:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1879:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1890:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1875:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1875:18:33"
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1895:29:33",
                        "type": "",
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1868:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1868:57:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1868:57:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1934:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1946:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1934:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1766:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1780:4:33",
                "type": ""
              }
            ],
            "src": "1615:351:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2145:170:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2162:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2173:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2155:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2155:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2196:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2207:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2192:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2192:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2212:2:33",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2185:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2235:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2246:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2231:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:18:33"
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2251:22:33",
                        "type": "",
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2224:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2224:50:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2224:50:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2283:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2295:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2291:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2283:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2122:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2136:4:33",
                "type": ""
              }
            ],
            "src": "1971:344:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2494:169:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2511:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2522:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:21:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:21:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2545:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2556:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2541:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2541:18:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2561:2:33",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2534:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2534:30:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2534:30:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2584:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:2:33",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:18:33"
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2600:21:33",
                        "type": "",
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:49:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2573:49:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2631:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2643:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2654:2:33",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2639:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2639:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2631:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2471:9:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2485:4:33",
                "type": ""
              }
            ],
            "src": "2320:343:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2815:221:33",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2825:76:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2835:66:33",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2829:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2917:3:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2930:2:33",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2934:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2926:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2926:15:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2943:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:24:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2910:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2910:37:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2910:37:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2967:3:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2972:2:33",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2963:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2963:12:33"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2985:2:33",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2989:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2981:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2981:15:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2998:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2977:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:24:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2956:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2956:46:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2956:46:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3011:19:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3022:3:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3027:2:33",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3018:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3018:12:33"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3011:3:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2783:3:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2788:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2796:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2807:3:33",
                "type": ""
              }
            ],
            "src": "2668:368:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3170:198:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3180:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3192:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3203:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3188:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3188:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3180:4:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3215:52:33",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3225:42:33",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3219:2:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3283:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3306:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3294:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3294:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3276:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3276:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3276:34:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3330:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3341:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3326:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3326:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3350:6:33"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3358:2:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3346:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3346:15:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3319:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3319:43:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3319:43:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3131:9:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3142:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3150:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3161:4:33",
                "type": ""
              }
            ],
            "src": "3041:327:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3502:168:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3512:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3524:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3535:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3520:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3520:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3512:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3554:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3569:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3577:42:33",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3565:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:55:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:74:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3547:74:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3641:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3652:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3637:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3637:18:33"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3657:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3630:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:34:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3630:34:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3463:9:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3474:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3482:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3493:4:33",
                "type": ""
              }
            ],
            "src": "3373:297:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"DBSwap: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"DBSwap: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"DBSwap: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"DBSwap: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "128:1733:13:-:0;;;429:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;473:11;:26;;-1:-1:-1;;;;;;473:26:13;-1:-1:-1;;;;;473:26:13;;;;;;;;;;128:1733;;14:290:33;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:33;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:33:o;:::-;128:1733:13;;;;;;",
  "deployedSourceMap": "128:1733:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:20;;;;;;;;;;;;190:42:33;178:55;;;160:74;;148:2;133:18;175:20:13;;;;;;;;201:26;;;;;;;;;302:25;;;;;;:::i;:::-;;:::i;512:94::-;584:8;:15;512:94;;576:25:33;;;564:2;549:18;512:94:13;430:177:33;1696:163:13;;;;;;:::i;:::-;;:::i;:::-;;612:933;;;;;;:::i;:::-;;:::i;234:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:139;;;;;;:::i;:::-;;:::i;302:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;302:25:13;:::o;1696:163::-;1783:11;;;;1769:10;:25;1761:55;;;;;;;1471:2:33;1761:55:13;;;1453:21:33;1510:2;1490:18;;;1483:30;1549:19;1529:18;;;1522:47;1586:18;;1761:55:13;;;;;;;;;1826:11;:26;;;;;;;;;;;;;;;1696:163::o;612:933::-;682:12;724:6;714:16;;:6;:16;;;;706:56;;;;;;;1817:2:33;706:56:13;;;1799:21:33;1856:2;1836:18;;;1829:30;1895:29;1875:18;;;1868:57;1942:18;;706:56:13;1615:351:33;706:56:13;773:14;789;816:6;807:15;;:6;:15;;;:53;;845:6;853;807:53;;;826:6;834;807:53;772:88;;-1:-1:-1;772:88:13;-1:-1:-1;878:20:13;;;870:53;;;;;;;2173:2:33;870:53:13;;;2155:21:33;2212:2;2192:18;;;2185:30;2251:22;2231:18;;;2224:50;2291:18;;870:53:13;1971:344:33;870:53:13;941:37;:15;;;976:1;941:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;933:69;;;;;;;2522:2:33;933:69:13;;;2504:21:33;2561:2;2541:18;;;2534:30;2600:21;2580:18;;;2573:49;2639:18;;933:69:13;2320:343:33;933:69:13;1042:21;1066:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2835:66:33;2930:2;2926:15;;;2922:24;;1066:29:13;1130:32;;2910:37:33;2981:15;;;2977:24;2963:12;;;2956:46;1066:29:13;;-1:-1:-1;1105:12:13;;3018::33;;1130:32:13;;;;;;;;;;;;1120:43;;;;;;1105:58;;1251:4;1240:8;1234:15;1229:2;1219:8;1215:17;1212:1;1204:52;1275:44;;;;;:28;3294:15:33;;;1275:44:13;;;3276:34:33;3346:15;;;3326:18;;;3319:43;1196:60:13;;-1:-1:-1;1275:28:13;;;;;;3188:18:33;;1275:44:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1329:15:13;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;1369:15;;;;;;:23;;;;;;;;:30;;;;;;;;1454:8;:19;;-1:-1:-1;1454:19:13;;;;;;;;;;;;;;;;;;;;;;1522:15;;1488:50;;3547:74:33;;;3637:18;;;3630:34;1488:50:13;;3520:18:33;1488:50:13;;;;;;;696:849;;;;612:933;;;;:::o;1551:139::-;1626:11;;;;1612:10;:25;1604:55;;;;;;;1471:2:33;1604:55:13;;;1453:21:33;1510:2;1490:18;;;1483:30;1549:19;1529:18;;;1522:47;1586:18;;1604:55:13;1269:341:33;1604:55:13;1669:5;:14;;;;;;;;;;;;;;;1551:139::o;-1:-1:-1:-;;;;;;;;:::o;245:180:33:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;-1:-1:-1;396:23:33;;245:180;-1:-1:-1;245:180:33:o;612:196::-;680:20;;740:42;729:54;;719:65;;709:93;;798:1;795;788:12;709:93;612:196;;;:::o;813:186::-;872:6;925:2;913:9;904:7;900:23;896:32;893:52;;;941:1;938;931:12;893:52;964:29;983:9;964:29;:::i;:::-;954:39;813:186;-1:-1:-1;;;813:186:33:o;1004:260::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:52;;;1149:1;1146;1139:12;1101:52;1172:29;1191:9;1172:29;:::i;:::-;1162:39;;1220:38;1254:2;1243:9;1239:18;1220:38;:::i;:::-;1210:48;;1004:260;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport './interfaces/IDBSwapFactory.sol';\nimport './DBSwapPair.sol';\n\ncontract DBSwapFactory is IDBSwapFactory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    // event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'DBSwap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'DBSwap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'DBSwap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(DBSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IDBSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'DBSwap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'DBSwap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/Users/deyibanh/Documents/Professionnel/Alyra/Applications/alyra-defi4-uniswap-fork/contracts/uniswap-v2-core/DBSwapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapFactory.sol",
    "exportedSymbols": {
      "DBSwapERC20": [
        2039
      ],
      "DBSwapFactory": [
        2226
      ],
      "DBSwapPair": [
        3233
      ],
      "IDBSwapCallee": [
        3247
      ],
      "IDBSwapERC20": [
        3287
      ],
      "IDBSwapFactory": [
        3350
      ],
      "IDBSwapPair": [
        3480
      ],
      "IERC20": [
        3564
      ],
      "Math": [
        3640
      ],
      "UQ112x112": [
        3684
      ]
    },
    "id": 2227,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2041,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol",
        "file": "./interfaces/IDBSwapFactory.sol",
        "id": 2042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2227,
        "sourceUnit": 3351,
        "src": "58:41:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapPair.sol",
        "file": "./DBSwapPair.sol",
        "id": 2043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2227,
        "sourceUnit": 3234,
        "src": "100:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2044,
              "name": "IDBSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3350,
              "src": "154:14:13"
            },
            "id": 2045,
            "nodeType": "InheritanceSpecifier",
            "src": "154:14:13"
          }
        ],
        "canonicalName": "DBSwapFactory",
        "contractDependencies": [
          3233
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2226,
        "linearizedBaseContracts": [
          2226,
          3350
        ],
        "name": "DBSwapFactory",
        "nameLocation": "137:13:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3304
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 2047,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "190:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "175:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2046,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3309
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 2049,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "216:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "201:26:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2048,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3318
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 2055,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "289:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "234:62:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 2054,
              "keyType": {
                "id": 2050,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:47:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 2053,
                "keyType": {
                  "id": 2051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "261:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "253:27:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 2052,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3325
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 2058,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "319:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "302:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2057,
              "nodeType": "ArrayTypeName",
              "src": "302:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "463:43:13",
              "statements": [
                {
                  "expression": {
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2063,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "473:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2064,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "487:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:13"
                }
              ]
            },
            "id": 2068,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "449:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "441:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:22:13"
            },
            "returnParameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:13"
            },
            "scope": 2226,
            "src": "429:77:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3330
            ],
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "567:39:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2073,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "584:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "584:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2072,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "577:22:13"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "521:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:13"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "561:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:6:13"
            },
            "scope": 2226,
            "src": "512:94:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3339
            ],
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "696:849:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2087,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "714:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2088,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "724:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "714:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 2086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "706:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:56:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "706:56:13"
                },
                {
                  "assignments": [
                    2094,
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2094,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "781:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "773:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "773:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2096,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "797:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "789:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2095,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "789:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2107,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2097,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "807:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2098,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2081,
                        "src": "816:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "807:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 2103,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "845:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2104,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "853:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2105,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "844:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "807:53:13",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 2100,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "826:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2101,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "834:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2102,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "825:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2109,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "878:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "896:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "888:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2110,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "888:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "878:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        },
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 2108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "870:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "870:53:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2119,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2055,
                              "src": "941:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 2121,
                            "indexExpression": {
                              "id": 2120,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2094,
                              "src": "949:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "941:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2123,
                          "indexExpression": {
                            "id": 2122,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "957:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "941:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "976:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "968:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "968:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "968:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "941:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        },
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 2118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "933:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "933:69:13"
                },
                {
                  "assignments": [
                    2133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2133,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1055:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1042:21:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2132,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2138,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2135,
                          "name": "DBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3233,
                          "src": "1071:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$3233_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$3233_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        ],
                        "id": 2134,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1066:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_DBSwapPair_$3233",
                        "typeString": "type(contract DBSwapPair)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1066:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:53:13"
                },
                {
                  "assignments": [
                    2140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2140,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1113:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1105:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2139,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2144,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "1147:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2145,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "1155:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2142,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1130:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1130:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:32:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2141,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1120:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:43:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1105:58:13"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1182:84:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1196:60:13",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:8:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1229:2:13",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1215:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1215:17:13"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:8:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1234:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1234:15:13"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1251:4:13"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:52:13"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1196:4:13"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2133,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1219:8:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2133,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1240:8:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2084,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1196:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2140,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1251:4:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 2149,
                  "nodeType": "InlineAssembly",
                  "src": "1173:93:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2154,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1304:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2155,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1312:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2151,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "1287:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2150,
                          "name": "IDBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3480,
                          "src": "1275:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDBSwapPair_$3480_$",
                            "typeString": "type(contract IDBSwapPair)"
                          }
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDBSwapPair_$3480",
                          "typeString": "contract IDBSwapPair"
                        }
                      },
                      "id": 2153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1275:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:44:13"
                },
                {
                  "expression": {
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2158,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1329:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2161,
                        "indexExpression": {
                          "id": 2159,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "1337:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1329:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2162,
                      "indexExpression": {
                        "id": 2160,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1345:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1329:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2163,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "1355:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:30:13"
                },
                {
                  "expression": {
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2166,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1369:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2169,
                        "indexExpression": {
                          "id": 2167,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "1377:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1369:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2170,
                      "indexExpression": {
                        "id": 2168,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1385:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1369:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2171,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "1395:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2173,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2177,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "1468:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2174,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "1454:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1454:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2179,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2181,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1500:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2182,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1508:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2183,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "1516:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2184,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "1522:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1522:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2180,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "1488:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2187,
                  "nodeType": "EmitStatement",
                  "src": "1483:55:13"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "621:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "640:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "632:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "656:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "648:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:32:13"
            },
            "returnParameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "690:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "682:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:14:13"
            },
            "scope": 2226,
            "src": "612:933:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3344
            ],
            "body": {
              "id": 2206,
              "nodeType": "Block",
              "src": "1594:96:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2197,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "1626:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:55:13"
                },
                {
                  "expression": {
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2202,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2047,
                      "src": "1669:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2203,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "1677:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1669:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:14:13"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 2207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1560:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1577:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2207,
                  "src": "1569:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:16:13"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:13"
            },
            "scope": 2226,
            "src": "1551:139:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3349
            ],
            "body": {
              "id": 2224,
              "nodeType": "Block",
              "src": "1751:108:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1769:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1769:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2215,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "1783:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1769:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:55:13"
                },
                {
                  "expression": {
                    "id": 2222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2220,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "1826:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2221,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2209,
                      "src": "1840:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1826:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2223,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:26:13"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 2225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1705:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1728:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2225,
                  "src": "1720:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:22:13"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:13"
            },
            "scope": 2226,
            "src": "1696:163:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2227,
        "src": "128:1733:13",
        "usedErrors": []
      }
    ],
    "src": "33:1829:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapFactory.sol",
    "exportedSymbols": {
      "DBSwapERC20": [
        2039
      ],
      "DBSwapFactory": [
        2226
      ],
      "DBSwapPair": [
        3233
      ],
      "IDBSwapCallee": [
        3247
      ],
      "IDBSwapERC20": [
        3287
      ],
      "IDBSwapFactory": [
        3350
      ],
      "IDBSwapPair": [
        3480
      ],
      "IERC20": [
        3564
      ],
      "Math": [
        3640
      ],
      "UQ112x112": [
        3684
      ]
    },
    "id": 2227,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2041,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol",
        "file": "./interfaces/IDBSwapFactory.sol",
        "id": 2042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2227,
        "sourceUnit": 3351,
        "src": "58:41:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapPair.sol",
        "file": "./DBSwapPair.sol",
        "id": 2043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2227,
        "sourceUnit": 3234,
        "src": "100:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2044,
              "name": "IDBSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3350,
              "src": "154:14:13"
            },
            "id": 2045,
            "nodeType": "InheritanceSpecifier",
            "src": "154:14:13"
          }
        ],
        "canonicalName": "DBSwapFactory",
        "contractDependencies": [
          3233
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2226,
        "linearizedBaseContracts": [
          2226,
          3350
        ],
        "name": "DBSwapFactory",
        "nameLocation": "137:13:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3304
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 2047,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "190:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "175:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2046,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3309
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 2049,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "216:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "201:26:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2048,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3318
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 2055,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "289:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "234:62:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 2054,
              "keyType": {
                "id": 2050,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:47:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 2053,
                "keyType": {
                  "id": 2051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "261:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "253:27:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 2052,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3325
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 2058,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "319:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 2226,
            "src": "302:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2057,
              "nodeType": "ArrayTypeName",
              "src": "302:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "463:43:13",
              "statements": [
                {
                  "expression": {
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2063,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "473:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2064,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "487:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:13"
                }
              ]
            },
            "id": 2068,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "449:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "441:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:22:13"
            },
            "returnParameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:13"
            },
            "scope": 2226,
            "src": "429:77:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3330
            ],
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "567:39:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2073,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "584:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "584:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2072,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "577:22:13"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "521:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:13"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "561:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:6:13"
            },
            "scope": 2226,
            "src": "512:94:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3339
            ],
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "696:849:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2087,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "714:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2088,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "724:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "714:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "id": 2090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 2086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "706:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:56:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
                  "src": "706:56:13"
                },
                {
                  "assignments": [
                    2094,
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2094,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "781:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "773:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "773:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2096,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "797:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "789:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2095,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "789:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2107,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2097,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2079,
                        "src": "807:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2098,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2081,
                        "src": "816:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "807:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 2103,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "845:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2104,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "853:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2105,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "844:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "807:53:13",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 2100,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2079,
                          "src": "826:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2101,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2081,
                          "src": "834:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2102,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "825:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2109,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "878:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "896:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "888:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2110,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "888:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "878:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        },
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 2108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "870:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "870:53:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2119,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2055,
                              "src": "941:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 2121,
                            "indexExpression": {
                              "id": 2120,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2094,
                              "src": "949:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "941:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2123,
                          "indexExpression": {
                            "id": 2122,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "957:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "941:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "976:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "968:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "968:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "968:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "941:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        },
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 2118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "933:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "933:69:13"
                },
                {
                  "assignments": [
                    2133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2133,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1055:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1042:21:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2132,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2138,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2135,
                          "name": "DBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3233,
                          "src": "1071:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$3233_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$3233_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        ],
                        "id": 2134,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1066:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_DBSwapPair_$3233",
                        "typeString": "type(contract DBSwapPair)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1066:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:53:13"
                },
                {
                  "assignments": [
                    2140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2140,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1113:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1105:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2139,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2144,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2094,
                            "src": "1147:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2145,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "1155:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2142,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1130:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1130:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:32:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2141,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1120:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:43:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1105:58:13"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1182:84:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1196:60:13",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:8:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1229:2:13",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1215:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1215:17:13"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:8:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1234:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1234:15:13"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1251:4:13"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:52:13"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1196:4:13"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2133,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1219:8:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2133,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1240:8:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2084,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1196:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2140,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1251:4:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 2149,
                  "nodeType": "InlineAssembly",
                  "src": "1173:93:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2154,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1304:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2155,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1312:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2151,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "1287:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2150,
                          "name": "IDBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3480,
                          "src": "1275:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDBSwapPair_$3480_$",
                            "typeString": "type(contract IDBSwapPair)"
                          }
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDBSwapPair_$3480",
                          "typeString": "contract IDBSwapPair"
                        }
                      },
                      "id": 2153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1275:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2157,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:44:13"
                },
                {
                  "expression": {
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2158,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1329:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2161,
                        "indexExpression": {
                          "id": 2159,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "1337:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1329:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2162,
                      "indexExpression": {
                        "id": 2160,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1345:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1329:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2163,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "1355:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:30:13"
                },
                {
                  "expression": {
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2166,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1369:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2169,
                        "indexExpression": {
                          "id": 2167,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "1377:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1369:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2170,
                      "indexExpression": {
                        "id": 2168,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1385:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1369:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2171,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2084,
                      "src": "1395:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2173,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2177,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "1468:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2174,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "1454:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1454:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2179,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2181,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "1500:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2182,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1508:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2183,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "1516:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2184,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "1522:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1522:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2180,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "1488:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:50:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2187,
                  "nodeType": "EmitStatement",
                  "src": "1483:55:13"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "621:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "640:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "632:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "656:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "648:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:32:13"
            },
            "returnParameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "690:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "682:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:14:13"
            },
            "scope": 2226,
            "src": "612:933:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3344
            ],
            "body": {
              "id": 2206,
              "nodeType": "Block",
              "src": "1594:96:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2197,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "1626:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:55:13"
                },
                {
                  "expression": {
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2202,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2047,
                      "src": "1669:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2203,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "1677:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1669:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:14:13"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 2207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1560:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1577:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2207,
                  "src": "1569:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:16:13"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:13"
            },
            "scope": 2226,
            "src": "1551:139:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3349
            ],
            "body": {
              "id": 2224,
              "nodeType": "Block",
              "src": "1751:108:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1769:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1769:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2215,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "1783:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1769:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:55:13"
                },
                {
                  "expression": {
                    "id": 2222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2220,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "1826:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2221,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2209,
                      "src": "1840:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1826:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2223,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:26:13"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 2225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1705:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1728:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2225,
                  "src": "1720:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:22:13"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:13"
            },
            "scope": 2226,
            "src": "1696:163:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2227,
        "src": "128:1733:13",
        "usedErrors": []
      }
    ],
    "src": "33:1829:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "pair",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "PairCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6Da808bB7c65D6ba4693a690ceA7eEdDc40570A0",
      "transactionHash": "0xf779127ae9fd1a105a1b27e205e19dc7df8376ea2f1d328cc92c341797438a81"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-07T09:15:30.046Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}