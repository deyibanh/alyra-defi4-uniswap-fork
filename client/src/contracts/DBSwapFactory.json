{
  "contractName": "DBSwapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/uniswap-v2-core/DBSwapFactory.sol\":\"DBSwapFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/uniswap-v2-core/DBSwapERC20.sol\":{\"keccak256\":\"0xc10556492ed71e25f0555db9c4cd86ae5ca3cdfb4ca413a5658a1252d27ad2e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74cfb92594bed390204c072d8d2dd069919c45d62d315180a3dfe2b31b49c7fb\",\"dweb:/ipfs/QmSAC2wJMb8ShFixNrAovH1UiADqrQQWiFnvD1PtzqKhUW\"]},\"project:/contracts/uniswap-v2-core/DBSwapFactory.sol\":{\"keccak256\":\"0xcefe1021c796395a0e31397c37f0a08864af9296cfa30f42555dc5a739960cc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d2926e3ef7413171266b1950caf32e24b9f306ea2ef6652168352d9c0541919\",\"dweb:/ipfs/QmbtAuG1YwR6s1sh1jvbmUjkk4HjvJqdZtcjycAVvZ5ySr\"]},\"project:/contracts/uniswap-v2-core/DBSwapPair.sol\":{\"keccak256\":\"0x3664fd1de15a911ca7ba9d7199ef6a0bc641296b51b349090191600360aee2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3278cd5d968ff5865287f9630c26d81fdfb831566877bb0ccad24b0f80fa9baf\",\"dweb:/ipfs/QmWoXoJPMC3Zxyq3SSHsy1uwbpCw5Ga3LcfsmX3e32Yq5a\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapCallee.sol\":{\"keccak256\":\"0xb7d509561329857d914894dd92de5ef4819d85c663a0b12423f66497c2a82b7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9a5279a3f6458b68ead556bcd525fa3f5ef5e9d8bfcb70b6ed45a7448151cf\",\"dweb:/ipfs/QmdxjxSnv8yvV6kuSjsYVy1sAxfNEEQny22GoXGTHpUtVi\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapERC20.sol\":{\"keccak256\":\"0xbcf4485707d6e381f532aef2464e7ffe2a272b8fbdcae8f7d199449e68882c3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c80b94b1951c0a66d522f394176e90665f3a3fc7ea7f425d69e3ce0b1adb277\",\"dweb:/ipfs/QmZTHcW13UYSa2kTGx6fya5heDHopLuryM1yxdejqMcgJz\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol\":{\"keccak256\":\"0xeade8bd9e7f87f3e62db33cc4ab4c8f1b62ce09168d1f8d4c661dcd0605bd599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d70e754985298fa431307ee342e574570ffb8e0501839526f39e27a9e01ddf\",\"dweb:/ipfs/QmQXqgDq5CRr4jTFyka4g6QyXE2HNqASbbSdsy7KXLFHgN\"]},\"project:/contracts/uniswap-v2-core/interfaces/IDBSwapPair.sol\":{\"keccak256\":\"0x0f2b71a7e619a22f0b79ddac1ed647d057b74f17ca3bfdb2d314065ac502e7e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dddc3c5d7c0868ca4671427d0a083ba925cf44055b864cf8b23710d89ee687a2\",\"dweb:/ipfs/Qmasu6j1fWUr7i6xmpQDBjoociZwk1A3tyuZfVgqTxbXqV\"]},\"project:/contracts/uniswap-v2-core/interfaces/IERC20.sol\":{\"keccak256\":\"0xa3b3d014c91b6166a87dadf02b245bbe08ee0f8640e7b072437c5bfd2a7266b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395333c0e19be86360f9f7966daa9944a880f2aff1b0d96ace5711156c4d2136\",\"dweb:/ipfs/QmcYpuVrpYMqnpMgdpv7ByxMSf7zNEwkpR4oW47UQU2eZL\"]},\"project:/contracts/uniswap-v2-core/libraries/Math.sol\":{\"keccak256\":\"0x764923240a56f4d72085f95432a6ab6cc4a0bcecaf6b66f6a55b13cba96ea7f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5dee1c19898ff4ef8d45cf6a1d25ce69456f61cfe869f4ea3162d1961eda99\",\"dweb:/ipfs/Qmdtfrzh2BENBYMa8KZPdrS5P47Yy9kWpmiWn8chK4Auwz\"]},\"project:/contracts/uniswap-v2-core/libraries/UQ112x112.sol\":{\"keccak256\":\"0x01780ab266f5b39c18b643fc1012e3c3c579a95fb90c598bdb9d698c0a958bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b7aac7986324ee1f7ee6265fe1d3aa7dc060e08401f51143b9de2ff07877b23\",\"dweb:/ipfs/QmbbMvX6rNQjNSuB3xowieeGkgt37zzWGYAqn6dVb34UVo\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162004eba38038062004eba833981810160405281019061003491906100de565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b6000602082840312156100f4576100f361007b565b5b6000610102848285016100c9565b91505092915050565b614d9f806200011b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613f338062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f4442537761703a20464f5242494444454e000000000000000000000000000000600082015250565b600062000bcc60118362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f4442537761703a204944454e544943414c5f4144445245535345530000000000600082015250565b600062000c3e601b8362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f4442537761703a205a45524f5f41444452455353000000000000000000000000600082015250565b600062000cb060148362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f4442537761703a20504149525f45584953545300000000000000000000000000600082015250565b600062000d2260138362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600981526020017f4442537761702056310000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b613d18806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612b1a565b61054f565b005b6101d2610b52565b6040516101df9190612c3b565b60405180910390f35b6101f0610b8b565b6040516101ff93929190612ca5565b60405180910390f35b610222600480360381019061021d9190612cdc565b610be8565b60405161022f9190612d37565b60405180910390f35b610240610bff565b60405161024d9190612d61565b60405180910390f35b61025e610c25565b60405161026b9190612d8b565b60405180910390f35b61028e60048036038101906102899190612da6565b610c2b565b60405161029b9190612d37565b60405180910390f35b6102ac610def565b6040516102b99190612e12565b60405180910390f35b6102ca610e16565b6040516102d79190612e49565b60405180910390f35b6102e8610e1b565b6040516102f59190612e12565b60405180910390f35b61031860048036038101906103139190612e64565b610e21565b005b610322610f37565b60405161032f9190612d8b565b60405180910390f35b610340610f3d565b60405161034d9190612d8b565b60405180910390f35b610370600480360381019061036b9190612ea4565b610f43565b60405161037d9190612d8b565b60405180910390f35b6103a0600480360381019061039b9190612ea4565b6112ec565b6040516103ad9190612d8b565b60405180910390f35b6103be611304565b6040516103cb9190612d8b565b60405180910390f35b6103ee60048036038101906103e99190612ea4565b61130a565b6040516103fb9190612d8b565b60405180910390f35b61041e60048036038101906104199190612ea4565b611322565b60405161042c929190612ed1565b60405180910390f35b61043d6117a7565b60405161044a9190612c3b565b60405180910390f35b61046d60048036038101906104689190612cdc565b6117e0565b60405161047a9190612d37565b60405180910390f35b61048b6117f7565b6040516104989190612d8b565b60405180910390f35b6104bb60048036038101906104b69190612ea4565b6117fd565b005b6104c5611a1b565b6040516104d29190612d61565b60405180910390f35b6104e3611a41565b6040516104f09190612d61565b60405180910390f35b610513600480360381019061050e9190612f52565b611a67565b005b61052f600480360381019061052a9190612e64565b611c8f565b60405161053c9190612d8b565b60405180910390f35b61054d611cb4565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90613040565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906130d2565b60405180910390fd5b6000806105f5610b8b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e9061313e565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906131aa565b60405180910390fd5b60008b111561077457610773828a8d611e85565b5b60008a111561078957610788818a8c611e85565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff166317838daf338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613217565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612d61565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610883919061327a565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612d61565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff919061327a565b92505050600089856dffffffffffffffffffffffffffff1661092191906132d6565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906132d6565b8361095591906132d6565b5b9050600089856dffffffffffffffffffffffffffff1661097691906132d6565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906132d6565b836109aa91906132d6565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061337c565b60405180910390fd5b6000600383610a0a919061339c565b6103e886610a18919061339c565b610a2291906132d6565b90506000600383610a33919061339c565b6103e886610a41919061339c565b610a4b91906132d6565b9050620f42408789610a5d91906133f6565b610a6791906133f6565b6dffffffffffffffffffffffffffff168183610a83919061339c565b1015610ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abb9061348a565b60405180910390fd5b5050610ad28484888861200f565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b3594939291906134aa565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600981526020017f444253776170205631000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610bf5338484612303565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610dd95781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5891906132d6565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610de48484846123ee565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea89061353b565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8190613040565b60405180910390fd5b6000600c81905550600080610f9d610b8b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fff9190612d61565b602060405180830381865afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611040919061327a565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161109f9190612d61565b602060405180830381865afa1580156110bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e0919061327a565b90506000846dffffffffffffffffffffffffffff168361110091906132d6565b90506000846dffffffffffffffffffffffffffff168361112091906132d6565b9050600061112e8787612574565b90506000805490506000811415611174576103e86111568486611151919061339c565b612712565b61116091906132d6565b985061116f60006103e861278c565b6111cd565b6111ca886dffffffffffffffffffffffffffff168286611194919061339c565b61119e919061358a565b886dffffffffffffffffffffffffffff1683866111bb919061339c565b6111c5919061358a565b612898565b98505b60008911611210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112079061362d565b60405180910390fd5b61121a8a8a61278c565b61122686868a8a61200f565b8115611287576008600e9054906101000a90046dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff1661127091906133f6565b6dffffffffffffffffffffffffffff16600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f85856040516112cf929190612ed1565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c541461136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190613040565b60405180910390fd5b6000600c8190555060008061137d610b8b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161140b9190612d61565b602060405180830381865afa158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c919061327a565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114899190612d61565b602060405180830381865afa1580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca919061327a565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061151c8888612574565b9050600080549050808584611531919061339c565b61153b919061358a565b9a5080848461154a919061339c565b611554919061358a565b995060008b118015611566575060008a115b6115a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159c906136bf565b60405180910390fd5b6115af30846128b1565b6115ba878d8d611e85565b6115c5868d8c611e85565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115fe9190612d61565b602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f919061327a565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161167a9190612d61565b602060405180830381865afa158015611697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bb919061327a565b93506116c985858b8b61200f565b811561172a576008600e9054906101000a90046dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff1661171391906133f6565b6dffffffffffffffffffffffffffff16600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611789929190612ed1565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600581526020017f44422d563100000000000000000000000000000000000000000000000000000081525081565b60006117ed3384846123ee565b6001905092915050565b6103e881565b6001600c5414611842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183990613040565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506119538284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119039190612d61565b602060405180830381865afa158015611920573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611944919061327a565b61194e91906132d6565b611e85565b611a0e81846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119be9190612d61565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff919061327a565b611a0991906132d6565b611e85565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa19061372b565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b269061374b565b919050558a604051602001611b4096959493929190613794565b60405160208183030381529060405280519060200120604051602001611b6792919061386d565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611ba494939291906138a4565b6020604051602081039080840390855afa158015611bc6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c3a57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7090613935565b60405180910390fd5b611c84898989612303565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf090613040565b60405180910390fd5b6000600c81905550611e7b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d5f9190612d61565b602060405180830381865afa158015611d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da0919061327a565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611dfb9190612d61565b602060405180830381865afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c919061327a565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1661200f565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611eef929190613955565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f5991906139c5565b6000604051808303816000865af19150503d8060008114611f96576040519150601f19603f3d011682016040523d82523d6000602084013e611f9b565b606091505b5091509150818015611fc95750600081511480611fc8575080806020019051810190611fc79190613a08565b5b5b612008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fff90613a81565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff8016841115801561203f57506dffffffffffffffffffffffffffff80168311155b61207e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207590613aed565b60405180910390fd5b6000640100000000426120919190613b0d565b905060006008601c9054906101000a900463ffffffff16826120b39190613b3e565b905060008163ffffffff161180156120dc57506000846dffffffffffffffffffffffffffff1614155b80156120f957506000836dffffffffffffffffffffffffffff1614155b156121ff578063ffffffff1661213e85612112866129bd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166129f190919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612166919061339c565b600960008282546121779190613b72565b925050819055508063ffffffff166121be84612192876129bd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166129f190919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121e6919061339c565b600a60008282546121f79190613b72565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166040516122f3929190613bc8565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516123e19190612d8b565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461243991906132d6565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546124c79190613b72565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516125679190612d8b565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126089190613c06565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156126f857600081146126f3576000612678858761266391906133f6565b6dffffffffffffffffffffffffffff16612712565b9050600061268583612712565b9050808211156126f0576000818361269d91906132d6565b6000546126aa919061339c565b90506000826005856126bc919061339c565b6126c69190613b72565b9050600081836126d6919061358a565b905060008111156126ec576126eb878261278c565b5b5050505b50505b61270a565b60008114612709576000600b819055505b5b505092915050565b600060038211156127795781905060006001600284612731919061358a565b61273b9190613b72565b90505b81811015612773578091506002818285612758919061358a565b6127629190613b72565b61276c919061358a565b905061273e565b50612787565b6000821461278657600190505b5b919050565b8060005461279a9190613b72565b60008190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127eb9190613b72565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161288c9190612d8b565b60405180910390a35050565b60008183106128a757816128a9565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128fc91906132d6565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060005461294d91906132d6565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516129b19190612d8b565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166129ea9190613c5b565b9050919050565b6000816dffffffffffffffffffffffffffff1683612a0f9190613cb1565b905092915050565b600080fd5b600080fd5b6000819050919050565b612a3481612a21565b8114612a3f57600080fd5b50565b600081359050612a5181612a2b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8282612a57565b9050919050565b612a9281612a77565b8114612a9d57600080fd5b50565b600081359050612aaf81612a89565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ada57612ad9612ab5565b5b8235905067ffffffffffffffff811115612af757612af6612aba565b5b602083019150836001820283011115612b1357612b12612abf565b5b9250929050565b600080600080600060808688031215612b3657612b35612a17565b5b6000612b4488828901612a42565b9550506020612b5588828901612a42565b9450506040612b6688828901612aa0565b935050606086013567ffffffffffffffff811115612b8757612b86612a1c565b5b612b9388828901612ac4565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612bdc578082015181840152602081019050612bc1565b83811115612beb576000848401525b50505050565b6000601f19601f8301169050919050565b6000612c0d82612ba2565b612c178185612bad565b9350612c27818560208601612bbe565b612c3081612bf1565b840191505092915050565b60006020820190508181036000830152612c558184612c02565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612c8081612c5d565b82525050565b600063ffffffff82169050919050565b612c9f81612c86565b82525050565b6000606082019050612cba6000830186612c77565b612cc76020830185612c77565b612cd46040830184612c96565b949350505050565b60008060408385031215612cf357612cf2612a17565b5b6000612d0185828601612aa0565b9250506020612d1285828601612a42565b9150509250929050565b60008115159050919050565b612d3181612d1c565b82525050565b6000602082019050612d4c6000830184612d28565b92915050565b612d5b81612a77565b82525050565b6000602082019050612d766000830184612d52565b92915050565b612d8581612a21565b82525050565b6000602082019050612da06000830184612d7c565b92915050565b600080600060608486031215612dbf57612dbe612a17565b5b6000612dcd86828701612aa0565b9350506020612dde86828701612aa0565b9250506040612def86828701612a42565b9150509250925092565b6000819050919050565b612e0c81612df9565b82525050565b6000602082019050612e276000830184612e03565b92915050565b600060ff82169050919050565b612e4381612e2d565b82525050565b6000602082019050612e5e6000830184612e3a565b92915050565b60008060408385031215612e7b57612e7a612a17565b5b6000612e8985828601612aa0565b9250506020612e9a85828601612aa0565b9150509250929050565b600060208284031215612eba57612eb9612a17565b5b6000612ec884828501612aa0565b91505092915050565b6000604082019050612ee66000830185612d7c565b612ef36020830184612d7c565b9392505050565b612f0381612e2d565b8114612f0e57600080fd5b50565b600081359050612f2081612efa565b92915050565b612f2f81612df9565b8114612f3a57600080fd5b50565b600081359050612f4c81612f26565b92915050565b600080600080600080600060e0888a031215612f7157612f70612a17565b5b6000612f7f8a828b01612aa0565b9750506020612f908a828b01612aa0565b9650506040612fa18a828b01612a42565b9550506060612fb28a828b01612a42565b9450506080612fc38a828b01612f11565b93505060a0612fd48a828b01612f3d565b92505060c0612fe58a828b01612f3d565b91505092959891949750929550565b7f4442537761703a204c4f434b4544000000000000000000000000000000000000600082015250565b600061302a600e83612bad565b915061303582612ff4565b602082019050919050565b600060208201905081810360008301526130598161301d565b9050919050565b7f4442537761703a20494e53554646494349454e545f4f55545055545f414d4f5560008201527f4e54000000000000000000000000000000000000000000000000000000000000602082015250565b60006130bc602283612bad565b91506130c782613060565b604082019050919050565b600060208201905081810360008301526130eb816130af565b9050919050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954590000600082015250565b6000613128601e83612bad565b9150613133826130f2565b602082019050919050565b600060208201905081810360008301526131578161311b565b9050919050565b7f4442537761703a20494e56414c49445f544f0000000000000000000000000000600082015250565b6000613194601283612bad565b915061319f8261315e565b602082019050919050565b600060208201905081810360008301526131c381613187565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006131f683856131ca565b93506132038385846131db565b61320c83612bf1565b840190509392505050565b600060808201905061322c6000830188612d52565b6132396020830187612d7c565b6132466040830186612d7c565b81810360608301526132598184866131ea565b90509695505050505050565b60008151905061327481612a2b565b92915050565b6000602082840312156132905761328f612a17565b5b600061329e84828501613265565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006132e182612a21565b91506132ec83612a21565b9250828210156132ff576132fe6132a7565b5b828203905092915050565b7f4442537761703a20494e53554646494349454e545f494e5055545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000613366602183612bad565b91506133718261330a565b604082019050919050565b6000602082019050818103600083015261339581613359565b9050919050565b60006133a782612a21565b91506133b283612a21565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133eb576133ea6132a7565b5b828202905092915050565b600061340182612c5d565b915061340c83612c5d565b9250816dffffffffffffffffffffffffffff0483118215151615613433576134326132a7565b5b828202905092915050565b7f4442537761703a204b0000000000000000000000000000000000000000000000600082015250565b6000613474600983612bad565b915061347f8261343e565b602082019050919050565b600060208201905081810360008301526134a381613467565b9050919050565b60006080820190506134bf6000830187612d7c565b6134cc6020830186612d7c565b6134d96040830185612d7c565b6134e66060830184612d7c565b95945050505050565b7f4442537761703a20464f5242494444454e000000000000000000000000000000600082015250565b6000613525601183612bad565b9150613530826134ef565b602082019050919050565b6000602082019050818103600083015261355481613518565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061359582612a21565b91506135a083612a21565b9250826135b0576135af61355b565b5b828204905092915050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954595f4d60008201527f494e544544000000000000000000000000000000000000000000000000000000602082015250565b6000613617602583612bad565b9150613622826135bb565b604082019050919050565b600060208201905081810360008301526136468161360a565b9050919050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954595f4260008201527f55524e4544000000000000000000000000000000000000000000000000000000602082015250565b60006136a9602583612bad565b91506136b48261364d565b604082019050919050565b600060208201905081810360008301526136d88161369c565b9050919050565b7f4442537761703a20455850495245440000000000000000000000000000000000600082015250565b6000613715600f83612bad565b9150613720826136df565b602082019050919050565b6000602082019050818103600083015261374481613708565b9050919050565b600061375682612a21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613789576137886132a7565b5b600182019050919050565b600060c0820190506137a96000830189612e03565b6137b66020830188612d52565b6137c36040830187612d52565b6137d06060830186612d7c565b6137dd6080830185612d7c565b6137ea60a0830184612d7c565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006138366002836137f5565b915061384182613800565b600282019050919050565b6000819050919050565b61386761386282612df9565b61384c565b82525050565b600061387882613829565b91506138848285613856565b6020820191506138948284613856565b6020820191508190509392505050565b60006080820190506138b96000830187612e03565b6138c66020830186612e3a565b6138d36040830185612e03565b6138e06060830184612e03565b95945050505050565b7f4442537761703a20494e56414c49445f5349474e415455524500000000000000600082015250565b600061391f601983612bad565b915061392a826138e9565b602082019050919050565b6000602082019050818103600083015261394e81613912565b9050919050565b600060408201905061396a6000830185612d52565b6139776020830184612d7c565b9392505050565b600081519050919050565b600081905092915050565b600061399f8261397e565b6139a98185613989565b93506139b9818560208601612bbe565b80840191505092915050565b60006139d18284613994565b915081905092915050565b6139e581612d1c565b81146139f057600080fd5b50565b600081519050613a02816139dc565b92915050565b600060208284031215613a1e57613a1d612a17565b5b6000613a2c848285016139f3565b91505092915050565b7f4442537761703a205452414e534645525f4641494c4544000000000000000000600082015250565b6000613a6b601783612bad565b9150613a7682613a35565b602082019050919050565b60006020820190508181036000830152613a9a81613a5e565b9050919050565b7f4442537761703a204f564552464c4f5700000000000000000000000000000000600082015250565b6000613ad7601083612bad565b9150613ae282613aa1565b602082019050919050565b60006020820190508181036000830152613b0681613aca565b9050919050565b6000613b1882612a21565b9150613b2383612a21565b925082613b3357613b3261355b565b5b828206905092915050565b6000613b4982612c86565b9150613b5483612c86565b925082821015613b6757613b666132a7565b5b828203905092915050565b6000613b7d82612a21565b9150613b8883612a21565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613bbd57613bbc6132a7565b5b828201905092915050565b6000604082019050613bdd6000830185612c77565b613bea6020830184612c77565b9392505050565b600081519050613c0081612a89565b92915050565b600060208284031215613c1c57613c1b612a17565b5b6000613c2a84828501613bf1565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c6682613c33565b9150613c7183613c33565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ca657613ca56132a7565b5b828202905092915050565b6000613cbc82613c33565b9150613cc783613c33565b925082613cd757613cd661355b565b5b82820490509291505056fea2646970667358221220ab4ebd62b3d152755d3eeecd3c7cf106a5417d85ce20f0470380454da780da7364736f6c634300080a0033a264697066735822122066e3afdc58cedb27c1bc603f109161fdc391276e375b8f1d963db52d5706705a64736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613f338062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f4442537761703a20464f5242494444454e000000000000000000000000000000600082015250565b600062000bcc60118362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f4442537761703a204944454e544943414c5f4144445245535345530000000000600082015250565b600062000c3e601b8362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f4442537761703a205a45524f5f41444452455353000000000000000000000000600082015250565b600062000cb060148362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f4442537761703a20504149525f45584953545300000000000000000000000000600082015250565b600062000d2260138362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600981526020017f4442537761702056310000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b613d18806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612b1a565b61054f565b005b6101d2610b52565b6040516101df9190612c3b565b60405180910390f35b6101f0610b8b565b6040516101ff93929190612ca5565b60405180910390f35b610222600480360381019061021d9190612cdc565b610be8565b60405161022f9190612d37565b60405180910390f35b610240610bff565b60405161024d9190612d61565b60405180910390f35b61025e610c25565b60405161026b9190612d8b565b60405180910390f35b61028e60048036038101906102899190612da6565b610c2b565b60405161029b9190612d37565b60405180910390f35b6102ac610def565b6040516102b99190612e12565b60405180910390f35b6102ca610e16565b6040516102d79190612e49565b60405180910390f35b6102e8610e1b565b6040516102f59190612e12565b60405180910390f35b61031860048036038101906103139190612e64565b610e21565b005b610322610f37565b60405161032f9190612d8b565b60405180910390f35b610340610f3d565b60405161034d9190612d8b565b60405180910390f35b610370600480360381019061036b9190612ea4565b610f43565b60405161037d9190612d8b565b60405180910390f35b6103a0600480360381019061039b9190612ea4565b6112ec565b6040516103ad9190612d8b565b60405180910390f35b6103be611304565b6040516103cb9190612d8b565b60405180910390f35b6103ee60048036038101906103e99190612ea4565b61130a565b6040516103fb9190612d8b565b60405180910390f35b61041e60048036038101906104199190612ea4565b611322565b60405161042c929190612ed1565b60405180910390f35b61043d6117a7565b60405161044a9190612c3b565b60405180910390f35b61046d60048036038101906104689190612cdc565b6117e0565b60405161047a9190612d37565b60405180910390f35b61048b6117f7565b6040516104989190612d8b565b60405180910390f35b6104bb60048036038101906104b69190612ea4565b6117fd565b005b6104c5611a1b565b6040516104d29190612d61565b60405180910390f35b6104e3611a41565b6040516104f09190612d61565b60405180910390f35b610513600480360381019061050e9190612f52565b611a67565b005b61052f600480360381019061052a9190612e64565b611c8f565b60405161053c9190612d8b565b60405180910390f35b61054d611cb4565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90613040565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906130d2565b60405180910390fd5b6000806105f5610b8b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e9061313e565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906131aa565b60405180910390fd5b60008b111561077457610773828a8d611e85565b5b60008a111561078957610788818a8c611e85565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff166317838daf338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613217565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612d61565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610883919061327a565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612d61565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff919061327a565b92505050600089856dffffffffffffffffffffffffffff1661092191906132d6565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906132d6565b8361095591906132d6565b5b9050600089856dffffffffffffffffffffffffffff1661097691906132d6565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906132d6565b836109aa91906132d6565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061337c565b60405180910390fd5b6000600383610a0a919061339c565b6103e886610a18919061339c565b610a2291906132d6565b90506000600383610a33919061339c565b6103e886610a41919061339c565b610a4b91906132d6565b9050620f42408789610a5d91906133f6565b610a6791906133f6565b6dffffffffffffffffffffffffffff168183610a83919061339c565b1015610ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abb9061348a565b60405180910390fd5b5050610ad28484888861200f565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b3594939291906134aa565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600981526020017f444253776170205631000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610bf5338484612303565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610dd95781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5891906132d6565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610de48484846123ee565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea89061353b565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8190613040565b60405180910390fd5b6000600c81905550600080610f9d610b8b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fff9190612d61565b602060405180830381865afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611040919061327a565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161109f9190612d61565b602060405180830381865afa1580156110bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e0919061327a565b90506000846dffffffffffffffffffffffffffff168361110091906132d6565b90506000846dffffffffffffffffffffffffffff168361112091906132d6565b9050600061112e8787612574565b90506000805490506000811415611174576103e86111568486611151919061339c565b612712565b61116091906132d6565b985061116f60006103e861278c565b6111cd565b6111ca886dffffffffffffffffffffffffffff168286611194919061339c565b61119e919061358a565b886dffffffffffffffffffffffffffff1683866111bb919061339c565b6111c5919061358a565b612898565b98505b60008911611210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112079061362d565b60405180910390fd5b61121a8a8a61278c565b61122686868a8a61200f565b8115611287576008600e9054906101000a90046dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff1661127091906133f6565b6dffffffffffffffffffffffffffff16600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f85856040516112cf929190612ed1565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c541461136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190613040565b60405180910390fd5b6000600c8190555060008061137d610b8b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161140b9190612d61565b602060405180830381865afa158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c919061327a565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114899190612d61565b602060405180830381865afa1580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca919061327a565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061151c8888612574565b9050600080549050808584611531919061339c565b61153b919061358a565b9a5080848461154a919061339c565b611554919061358a565b995060008b118015611566575060008a115b6115a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159c906136bf565b60405180910390fd5b6115af30846128b1565b6115ba878d8d611e85565b6115c5868d8c611e85565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115fe9190612d61565b602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f919061327a565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161167a9190612d61565b602060405180830381865afa158015611697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bb919061327a565b93506116c985858b8b61200f565b811561172a576008600e9054906101000a90046dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff1661171391906133f6565b6dffffffffffffffffffffffffffff16600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611789929190612ed1565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600581526020017f44422d563100000000000000000000000000000000000000000000000000000081525081565b60006117ed3384846123ee565b6001905092915050565b6103e881565b6001600c5414611842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183990613040565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506119538284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119039190612d61565b602060405180830381865afa158015611920573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611944919061327a565b61194e91906132d6565b611e85565b611a0e81846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119be9190612d61565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff919061327a565b611a0991906132d6565b611e85565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa19061372b565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b269061374b565b919050558a604051602001611b4096959493929190613794565b60405160208183030381529060405280519060200120604051602001611b6792919061386d565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611ba494939291906138a4565b6020604051602081039080840390855afa158015611bc6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c3a57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7090613935565b60405180910390fd5b611c84898989612303565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf090613040565b60405180910390fd5b6000600c81905550611e7b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d5f9190612d61565b602060405180830381865afa158015611d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da0919061327a565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611dfb9190612d61565b602060405180830381865afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c919061327a565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1661200f565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611eef929190613955565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f5991906139c5565b6000604051808303816000865af19150503d8060008114611f96576040519150601f19603f3d011682016040523d82523d6000602084013e611f9b565b606091505b5091509150818015611fc95750600081511480611fc8575080806020019051810190611fc79190613a08565b5b5b612008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fff90613a81565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff8016841115801561203f57506dffffffffffffffffffffffffffff80168311155b61207e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207590613aed565b60405180910390fd5b6000640100000000426120919190613b0d565b905060006008601c9054906101000a900463ffffffff16826120b39190613b3e565b905060008163ffffffff161180156120dc57506000846dffffffffffffffffffffffffffff1614155b80156120f957506000836dffffffffffffffffffffffffffff1614155b156121ff578063ffffffff1661213e85612112866129bd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166129f190919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612166919061339c565b600960008282546121779190613b72565b925050819055508063ffffffff166121be84612192876129bd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166129f190919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121e6919061339c565b600a60008282546121f79190613b72565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166040516122f3929190613bc8565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516123e19190612d8b565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461243991906132d6565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546124c79190613b72565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516125679190612d8b565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126089190613c06565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156126f857600081146126f3576000612678858761266391906133f6565b6dffffffffffffffffffffffffffff16612712565b9050600061268583612712565b9050808211156126f0576000818361269d91906132d6565b6000546126aa919061339c565b90506000826005856126bc919061339c565b6126c69190613b72565b9050600081836126d6919061358a565b905060008111156126ec576126eb878261278c565b5b5050505b50505b61270a565b60008114612709576000600b819055505b5b505092915050565b600060038211156127795781905060006001600284612731919061358a565b61273b9190613b72565b90505b81811015612773578091506002818285612758919061358a565b6127629190613b72565b61276c919061358a565b905061273e565b50612787565b6000821461278657600190505b5b919050565b8060005461279a9190613b72565b60008190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127eb9190613b72565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161288c9190612d8b565b60405180910390a35050565b60008183106128a757816128a9565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128fc91906132d6565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060005461294d91906132d6565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516129b19190612d8b565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166129ea9190613c5b565b9050919050565b6000816dffffffffffffffffffffffffffff1683612a0f9190613cb1565b905092915050565b600080fd5b600080fd5b6000819050919050565b612a3481612a21565b8114612a3f57600080fd5b50565b600081359050612a5181612a2b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8282612a57565b9050919050565b612a9281612a77565b8114612a9d57600080fd5b50565b600081359050612aaf81612a89565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ada57612ad9612ab5565b5b8235905067ffffffffffffffff811115612af757612af6612aba565b5b602083019150836001820283011115612b1357612b12612abf565b5b9250929050565b600080600080600060808688031215612b3657612b35612a17565b5b6000612b4488828901612a42565b9550506020612b5588828901612a42565b9450506040612b6688828901612aa0565b935050606086013567ffffffffffffffff811115612b8757612b86612a1c565b5b612b9388828901612ac4565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612bdc578082015181840152602081019050612bc1565b83811115612beb576000848401525b50505050565b6000601f19601f8301169050919050565b6000612c0d82612ba2565b612c178185612bad565b9350612c27818560208601612bbe565b612c3081612bf1565b840191505092915050565b60006020820190508181036000830152612c558184612c02565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612c8081612c5d565b82525050565b600063ffffffff82169050919050565b612c9f81612c86565b82525050565b6000606082019050612cba6000830186612c77565b612cc76020830185612c77565b612cd46040830184612c96565b949350505050565b60008060408385031215612cf357612cf2612a17565b5b6000612d0185828601612aa0565b9250506020612d1285828601612a42565b9150509250929050565b60008115159050919050565b612d3181612d1c565b82525050565b6000602082019050612d4c6000830184612d28565b92915050565b612d5b81612a77565b82525050565b6000602082019050612d766000830184612d52565b92915050565b612d8581612a21565b82525050565b6000602082019050612da06000830184612d7c565b92915050565b600080600060608486031215612dbf57612dbe612a17565b5b6000612dcd86828701612aa0565b9350506020612dde86828701612aa0565b9250506040612def86828701612a42565b9150509250925092565b6000819050919050565b612e0c81612df9565b82525050565b6000602082019050612e276000830184612e03565b92915050565b600060ff82169050919050565b612e4381612e2d565b82525050565b6000602082019050612e5e6000830184612e3a565b92915050565b60008060408385031215612e7b57612e7a612a17565b5b6000612e8985828601612aa0565b9250506020612e9a85828601612aa0565b9150509250929050565b600060208284031215612eba57612eb9612a17565b5b6000612ec884828501612aa0565b91505092915050565b6000604082019050612ee66000830185612d7c565b612ef36020830184612d7c565b9392505050565b612f0381612e2d565b8114612f0e57600080fd5b50565b600081359050612f2081612efa565b92915050565b612f2f81612df9565b8114612f3a57600080fd5b50565b600081359050612f4c81612f26565b92915050565b600080600080600080600060e0888a031215612f7157612f70612a17565b5b6000612f7f8a828b01612aa0565b9750506020612f908a828b01612aa0565b9650506040612fa18a828b01612a42565b9550506060612fb28a828b01612a42565b9450506080612fc38a828b01612f11565b93505060a0612fd48a828b01612f3d565b92505060c0612fe58a828b01612f3d565b91505092959891949750929550565b7f4442537761703a204c4f434b4544000000000000000000000000000000000000600082015250565b600061302a600e83612bad565b915061303582612ff4565b602082019050919050565b600060208201905081810360008301526130598161301d565b9050919050565b7f4442537761703a20494e53554646494349454e545f4f55545055545f414d4f5560008201527f4e54000000000000000000000000000000000000000000000000000000000000602082015250565b60006130bc602283612bad565b91506130c782613060565b604082019050919050565b600060208201905081810360008301526130eb816130af565b9050919050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954590000600082015250565b6000613128601e83612bad565b9150613133826130f2565b602082019050919050565b600060208201905081810360008301526131578161311b565b9050919050565b7f4442537761703a20494e56414c49445f544f0000000000000000000000000000600082015250565b6000613194601283612bad565b915061319f8261315e565b602082019050919050565b600060208201905081810360008301526131c381613187565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006131f683856131ca565b93506132038385846131db565b61320c83612bf1565b840190509392505050565b600060808201905061322c6000830188612d52565b6132396020830187612d7c565b6132466040830186612d7c565b81810360608301526132598184866131ea565b90509695505050505050565b60008151905061327481612a2b565b92915050565b6000602082840312156132905761328f612a17565b5b600061329e84828501613265565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006132e182612a21565b91506132ec83612a21565b9250828210156132ff576132fe6132a7565b5b828203905092915050565b7f4442537761703a20494e53554646494349454e545f494e5055545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000613366602183612bad565b91506133718261330a565b604082019050919050565b6000602082019050818103600083015261339581613359565b9050919050565b60006133a782612a21565b91506133b283612a21565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156133eb576133ea6132a7565b5b828202905092915050565b600061340182612c5d565b915061340c83612c5d565b9250816dffffffffffffffffffffffffffff0483118215151615613433576134326132a7565b5b828202905092915050565b7f4442537761703a204b0000000000000000000000000000000000000000000000600082015250565b6000613474600983612bad565b915061347f8261343e565b602082019050919050565b600060208201905081810360008301526134a381613467565b9050919050565b60006080820190506134bf6000830187612d7c565b6134cc6020830186612d7c565b6134d96040830185612d7c565b6134e66060830184612d7c565b95945050505050565b7f4442537761703a20464f5242494444454e000000000000000000000000000000600082015250565b6000613525601183612bad565b9150613530826134ef565b602082019050919050565b6000602082019050818103600083015261355481613518565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061359582612a21565b91506135a083612a21565b9250826135b0576135af61355b565b5b828204905092915050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954595f4d60008201527f494e544544000000000000000000000000000000000000000000000000000000602082015250565b6000613617602583612bad565b9150613622826135bb565b604082019050919050565b600060208201905081810360008301526136468161360a565b9050919050565b7f4442537761703a20494e53554646494349454e545f4c49515549444954595f4260008201527f55524e4544000000000000000000000000000000000000000000000000000000602082015250565b60006136a9602583612bad565b91506136b48261364d565b604082019050919050565b600060208201905081810360008301526136d88161369c565b9050919050565b7f4442537761703a20455850495245440000000000000000000000000000000000600082015250565b6000613715600f83612bad565b9150613720826136df565b602082019050919050565b6000602082019050818103600083015261374481613708565b9050919050565b600061375682612a21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613789576137886132a7565b5b600182019050919050565b600060c0820190506137a96000830189612e03565b6137b66020830188612d52565b6137c36040830187612d52565b6137d06060830186612d7c565b6137dd6080830185612d7c565b6137ea60a0830184612d7c565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006138366002836137f5565b915061384182613800565b600282019050919050565b6000819050919050565b61386761386282612df9565b61384c565b82525050565b600061387882613829565b91506138848285613856565b6020820191506138948284613856565b6020820191508190509392505050565b60006080820190506138b96000830187612e03565b6138c66020830186612e3a565b6138d36040830185612e03565b6138e06060830184612e03565b95945050505050565b7f4442537761703a20494e56414c49445f5349474e415455524500000000000000600082015250565b600061391f601983612bad565b915061392a826138e9565b602082019050919050565b6000602082019050818103600083015261394e81613912565b9050919050565b600060408201905061396a6000830185612d52565b6139776020830184612d7c565b9392505050565b600081519050919050565b600081905092915050565b600061399f8261397e565b6139a98185613989565b93506139b9818560208601612bbe565b80840191505092915050565b60006139d18284613994565b915081905092915050565b6139e581612d1c565b81146139f057600080fd5b50565b600081519050613a02816139dc565b92915050565b600060208284031215613a1e57613a1d612a17565b5b6000613a2c848285016139f3565b91505092915050565b7f4442537761703a205452414e534645525f4641494c4544000000000000000000600082015250565b6000613a6b601783612bad565b9150613a7682613a35565b602082019050919050565b60006020820190508181036000830152613a9a81613a5e565b9050919050565b7f4442537761703a204f564552464c4f5700000000000000000000000000000000600082015250565b6000613ad7601083612bad565b9150613ae282613aa1565b602082019050919050565b60006020820190508181036000830152613b0681613aca565b9050919050565b6000613b1882612a21565b9150613b2383612a21565b925082613b3357613b3261355b565b5b828206905092915050565b6000613b4982612c86565b9150613b5483612c86565b925082821015613b6757613b666132a7565b5b828203905092915050565b6000613b7d82612a21565b9150613b8883612a21565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613bbd57613bbc6132a7565b5b828201905092915050565b6000604082019050613bdd6000830185612c77565b613bea6020830184612c77565b9392505050565b600081519050613c0081612a89565b92915050565b600060208284031215613c1c57613c1b612a17565b5b6000613c2a84828501613bf1565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c6682613c33565b9150613c7183613c33565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ca657613ca56132a7565b5b828202905092915050565b6000613cbc82613c33565b9150613cc783613c33565b925082613cd757613cd661355b565b5b82820490509291505056fea2646970667358221220ab4ebd62b3d152755d3eeecd3c7cf106a5417d85ce20f0470380454da780da7364736f6c634300080a0033a264697066735822122066e3afdc58cedb27c1bc603f109161fdc391276e375b8f1d963db52d5706705a64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:25",
                "type": ""
              }
            ],
            "src": "7:75:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:25"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:25"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:25",
                "type": ""
              }
            ],
            "src": "334:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:25",
                "type": ""
              }
            ],
            "src": "466:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:25",
                "type": ""
              }
            ],
            "src": "568:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:25",
                "type": ""
              }
            ],
            "src": "696:143:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:25",
                "type": ""
              }
            ],
            "src": "845:351:25"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8666:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:25",
                "type": ""
              }
            ],
            "src": "7:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:25",
                "type": ""
              }
            ],
            "src": "139:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:25",
                "type": ""
              }
            ],
            "src": "241:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:25",
                "type": ""
              }
            ],
            "src": "365:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:25",
                "type": ""
              }
            ],
            "src": "593:75:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:25"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:25"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "986:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:25",
                "type": ""
              }
            ],
            "src": "920:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:25",
                "type": ""
              }
            ],
            "src": "1003:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:25",
                "type": ""
              }
            ],
            "src": "1131:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:263:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:83:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1390:77:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:79:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:79:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1384:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1355:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1352:119:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1481:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1496:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1500:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:25",
                "type": ""
              }
            ],
            "src": "1276:329:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:25",
                "type": ""
              }
            ],
            "src": "1611:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:25",
                "type": ""
              }
            ],
            "src": "1735:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:25",
                "type": ""
              }
            ],
            "src": "1963:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:25",
                "type": ""
              }
            ],
            "src": "2091:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:25",
                "type": ""
              }
            ],
            "src": "2236:329:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2654:391:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2700:83:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2702:77:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2702:79:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2702:79:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2675:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2671:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2671:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2667:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2664:119:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2793:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2808:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2822:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2812:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2837:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2872:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2868:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2868:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2892:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2847:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2837:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2920:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2935:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2939:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2616:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2627:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2639:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2647:6:25",
                "type": ""
              }
            ],
            "src": "2571:474:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3147:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3164:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3169:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3119:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3124:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3135:11:25",
                "type": ""
              }
            ],
            "src": "3051:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:61:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:14:25"
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3366:19:25",
                        "type": "",
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:43:25"
                }
              ]
            },
            "name": "store_literal_in_memory_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3324:6:25",
                "type": ""
              }
            ],
            "src": "3226:167:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3545:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3555:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3621:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3626:2:25",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3562:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3562:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3727:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                      "nodeType": "YulIdentifier",
                      "src": "3638:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3638:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3638:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3740:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3751:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3756:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3740:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3533:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3541:3:25",
                "type": ""
              }
            ],
            "src": "3399:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3942:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3952:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3964:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3975:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3960:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3952:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3999:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4010:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3995:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3995:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4018:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4024:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4014:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3988:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3988:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3988:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4044:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4178:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4052:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4052:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4044:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3922:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3937:4:25",
                "type": ""
              }
            ],
            "src": "3771:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4302:71:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4324:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4320:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4320:14:25"
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4336:29:25",
                        "type": "",
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4313:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:53:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4313:53:25"
                }
              ]
            },
            "name": "store_literal_in_memory_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4294:6:25",
                "type": ""
              }
            ],
            "src": "4196:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4525:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4535:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4601:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4606:2:25",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4542:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4542:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4535:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4707:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                      "nodeType": "YulIdentifier",
                      "src": "4618:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4618:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4720:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4731:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4727:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4727:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4720:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4513:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4521:3:25",
                "type": ""
              }
            ],
            "src": "4379:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4922:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4932:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4944:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4955:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4940:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4940:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4932:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4979:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4990:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4975:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4975:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4998:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5004:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4968:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4968:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5024:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5158:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5032:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5032:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5024:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4902:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4917:4:25",
                "type": ""
              }
            ],
            "src": "4751:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5282:64:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5304:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5312:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5300:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5300:14:25"
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5316:22:25",
                        "type": "",
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5293:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:46:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5293:46:25"
                }
              ]
            },
            "name": "store_literal_in_memory_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5274:6:25",
                "type": ""
              }
            ],
            "src": "5176:170:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5498:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5508:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5574:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5579:2:25",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5515:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5515:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5508:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5680:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                      "nodeType": "YulIdentifier",
                      "src": "5591:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5591:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5693:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5704:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5700:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5693:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5486:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5494:3:25",
                "type": ""
              }
            ],
            "src": "5352:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5895:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5905:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5917:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5928:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5913:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5905:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5952:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5963:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5948:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5948:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5971:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5977:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5967:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5967:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5941:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5941:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5941:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5997:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6131:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6005:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5997:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5875:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5890:4:25",
                "type": ""
              }
            ],
            "src": "5724:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6255:63:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6277:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6285:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6273:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6273:14:25"
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6289:21:25",
                        "type": "",
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6266:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6266:45:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6266:45:25"
                }
              ]
            },
            "name": "store_literal_in_memory_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6247:6:25",
                "type": ""
              }
            ],
            "src": "6149:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6470:220:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6480:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6546:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6551:2:25",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6487:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6480:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6652:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                      "nodeType": "YulIdentifier",
                      "src": "6563:88:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6563:93:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6563:93:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6665:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6676:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6681:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6672:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6672:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6665:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6458:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6466:3:25",
                "type": ""
              }
            ],
            "src": "6324:366:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6867:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6877:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6889:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6900:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6885:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6877:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6924:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6935:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6920:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6920:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6943:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6949:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6939:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6939:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6913:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6913:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6969:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7103:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6977:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6969:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6847:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6862:4:25",
                "type": ""
              }
            ],
            "src": "6696:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7163:52:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7173:35:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7198:2:25",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7202:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7194:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7173:8:25"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7144:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7154:8:25",
                "type": ""
              }
            ],
            "src": "7121:94:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7268:47:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7278:31:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7303:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7289:13:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7289:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7278:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7250:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7260:7:25",
                "type": ""
              }
            ],
            "src": "7221:94:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7368:53:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7378:37:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7409:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7389:19:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7389:26:25"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7378:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7350:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7360:7:25",
                "type": ""
              }
            ],
            "src": "7321:100:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7510:74:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7527:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7570:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7552:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7552:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7532:19:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7532:45:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7520:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:58:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7520:58:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7498:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7505:3:25",
                "type": ""
              }
            ],
            "src": "7427:157:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7734:253:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7807:6:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7816:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7745:61:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:75:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7745:75:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7829:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7840:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7845:2:25",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7836:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7836:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7829:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7920:6:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7929:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7858:61:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7858:75:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7858:75:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7942:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7953:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7958:2:25",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7949:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7949:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7942:3:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7971:10:25",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7978:3:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7971:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7705:3:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7711:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7719:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7730:3:25",
                "type": ""
              }
            ],
            "src": "7590:397:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8119:206:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8141:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8152:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8129:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8209:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8222:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8233:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8218:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8218:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8165:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8165:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8290:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8303:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8314:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8299:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8299:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8246:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8246:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8246:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8083:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8095:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8103:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8114:4:25",
                "type": ""
              }
            ],
            "src": "7993:332:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8457:206:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8467:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8479:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8490:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8475:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8475:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8467:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8547:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8560:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8571:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8556:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8556:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8503:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8503:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8503:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8628:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8641:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8652:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8637:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8637:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8584:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8584:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8584:72:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8421:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8433:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8441:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8452:4:25",
                "type": ""
              }
            ],
            "src": "8331:332:25"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3(memPtr) {\n\n        mstore(add(memPtr, 0), \"DBSwap: FORBIDDEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee(memPtr) {\n\n        mstore(add(memPtr, 0), \"DBSwap: IDENTICAL_ADDRESSES\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"DBSwap: ZERO_ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"DBSwap: PAIR_EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "128:1733:5:-:0;;;429:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;487:12;473:11;;:26;;;;;;;;;;;;;;;;;;429:77;128:1733;;88:117:25;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;128:1733:5:-;;;;;;;",
  "deployedSourceMap": "128:1733:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;201:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;302:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;612:933;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;234:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1551:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;175:20;;;;;;;;;;;;:::o;201:26::-;;;;;;;;;;;;;:::o;302:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;512:94::-;561:4;584:8;:15;;;;577:22;;512:94;:::o;1696:163::-;1783:11;;;;;;;;;;;1769:25;;:10;:25;;;1761:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1840:12;1826:11;;:26;;;;;;;;;;;;;;;;;;1696:163;:::o;612:933::-;682:12;724:6;714:16;;:6;:16;;;;706:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;773:14;789;816:6;807:15;;:6;:15;;;:53;;845:6;853;807:53;;;826:6;834;807:53;772:88;;;;896:1;878:20;;:6;:20;;;;870:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;976:1;941:37;;:7;:15;949:6;941:15;;;;;;;;;;;;;;;:23;957:6;941:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;933:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:21;1066:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1042:53;;1105:12;1147:6;1155;1130:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1120:43;;;;;;1105:58;;1251:4;1240:8;1234:15;1229:2;1219:8;1215:17;1212:1;1204:52;1196:60;;1287:4;1275:28;;;1304:6;1312;1275:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:4;1329:7;:15;1337:6;1329:15;;;;;;;;;;;;;;;:23;1345:6;1329:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1395:4;1369:7;:15;1377:6;1369:15;;;;;;;;;;;;;;;:23;1385:6;1369:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1454:8;1468:4;1454:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:6;1488:50;;1500:6;1488:50;;;1516:4;1522:8;:15;;;;1488:50;;;;;;;:::i;:::-;;;;;;;;696:849;;;;612:933;;;;:::o;234:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1551:139::-;1626:11;;;;;;;;;;;1612:25;;:10;:25;;;1604:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1677:6;1669:5;;:14;;;;;;;;;;;;;;;;;;1551:139;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:25:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:167::-;3366:19;3362:1;3354:6;3350:14;3343:43;3226:167;:::o;3399:366::-;3541:3;3562:67;3626:2;3621:3;3562:67;:::i;:::-;3555:74;;3638:93;3727:3;3638:93;:::i;:::-;3756:2;3751:3;3747:12;3740:19;;3399:366;;;:::o;3771:419::-;3937:4;3975:2;3964:9;3960:18;3952:26;;4024:9;4018:4;4014:20;4010:1;3999:9;3995:17;3988:47;4052:131;4178:4;4052:131;:::i;:::-;4044:139;;3771:419;;;:::o;4196:177::-;4336:29;4332:1;4324:6;4320:14;4313:53;4196:177;:::o;4379:366::-;4521:3;4542:67;4606:2;4601:3;4542:67;:::i;:::-;4535:74;;4618:93;4707:3;4618:93;:::i;:::-;4736:2;4731:3;4727:12;4720:19;;4379:366;;;:::o;4751:419::-;4917:4;4955:2;4944:9;4940:18;4932:26;;5004:9;4998:4;4994:20;4990:1;4979:9;4975:17;4968:47;5032:131;5158:4;5032:131;:::i;:::-;5024:139;;4751:419;;;:::o;5176:170::-;5316:22;5312:1;5304:6;5300:14;5293:46;5176:170;:::o;5352:366::-;5494:3;5515:67;5579:2;5574:3;5515:67;:::i;:::-;5508:74;;5591:93;5680:3;5591:93;:::i;:::-;5709:2;5704:3;5700:12;5693:19;;5352:366;;;:::o;5724:419::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5977:9;5971:4;5967:20;5963:1;5952:9;5948:17;5941:47;6005:131;6131:4;6005:131;:::i;:::-;5997:139;;5724:419;;;:::o;6149:169::-;6289:21;6285:1;6277:6;6273:14;6266:45;6149:169;:::o;6324:366::-;6466:3;6487:67;6551:2;6546:3;6487:67;:::i;:::-;6480:74;;6563:93;6652:3;6563:93;:::i;:::-;6681:2;6676:3;6672:12;6665:19;;6324:366;;;:::o;6696:419::-;6862:4;6900:2;6889:9;6885:18;6877:26;;6949:9;6943:4;6939:20;6935:1;6924:9;6920:17;6913:47;6977:131;7103:4;6977:131;:::i;:::-;6969:139;;6696:419;;;:::o;7121:94::-;7154:8;7202:5;7198:2;7194:14;7173:35;;7121:94;;;:::o;7221:::-;7260:7;7289:20;7303:5;7289:20;:::i;:::-;7278:31;;7221:94;;;:::o;7321:100::-;7360:7;7389:26;7409:5;7389:26;:::i;:::-;7378:37;;7321:100;;;:::o;7427:157::-;7532:45;7552:24;7570:5;7552:24;:::i;:::-;7532:45;:::i;:::-;7527:3;7520:58;7427:157;;:::o;7590:397::-;7730:3;7745:75;7816:3;7807:6;7745:75;:::i;:::-;7845:2;7840:3;7836:12;7829:19;;7858:75;7929:3;7920:6;7858:75;:::i;:::-;7958:2;7953:3;7949:12;7942:19;;7978:3;7971:10;;7590:397;;;;;:::o;7993:332::-;8114:4;8152:2;8141:9;8137:18;8129:26;;8165:71;8233:1;8222:9;8218:17;8209:6;8165:71;:::i;:::-;8246:72;8314:2;8303:9;8299:18;8290:6;8246:72;:::i;:::-;7993:332;;;;;:::o;8331:::-;8452:4;8490:2;8479:9;8475:18;8467:26;;8503:71;8571:1;8560:9;8556:17;8547:6;8503:71;:::i;:::-;8584:72;8652:2;8641:9;8637:18;8628:6;8584:72;:::i;:::-;8331:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport './interfaces/IDBSwapFactory.sol';\nimport './DBSwapPair.sol';\n\ncontract DBSwapFactory is IDBSwapFactory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    // event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'DBSwap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'DBSwap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'DBSwap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(DBSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IDBSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'DBSwap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'DBSwap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/Users/deyibanh/Documents/Professionnel/Alyra/Applications/alyra-defi4-uniswap-fork/contracts/uniswap-v2-core/DBSwapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapFactory.sol",
    "exportedSymbols": {
      "DBSwapERC20": [
        1038
      ],
      "DBSwapFactory": [
        1225
      ],
      "DBSwapPair": [
        2232
      ],
      "IDBSwapCallee": [
        2246
      ],
      "IDBSwapERC20": [
        2286
      ],
      "IDBSwapFactory": [
        2349
      ],
      "IDBSwapPair": [
        2479
      ],
      "IERC20": [
        2563
      ],
      "Math": [
        2639
      ],
      "UQ112x112": [
        2683
      ]
    },
    "id": 1226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1040,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol",
        "file": "./interfaces/IDBSwapFactory.sol",
        "id": 1041,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 2350,
        "src": "58:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapPair.sol",
        "file": "./DBSwapPair.sol",
        "id": 1042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 2233,
        "src": "100:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1043,
              "name": "IDBSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2349,
              "src": "154:14:5"
            },
            "id": 1044,
            "nodeType": "InheritanceSpecifier",
            "src": "154:14:5"
          }
        ],
        "canonicalName": "DBSwapFactory",
        "contractDependencies": [
          2232
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1225,
        "linearizedBaseContracts": [
          1225,
          2349
        ],
        "name": "DBSwapFactory",
        "nameLocation": "137:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2303
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1046,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "190:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "175:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1045,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2308
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1048,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "216:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "201:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2317
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1054,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "289:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "234:62:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1053,
              "keyType": {
                "id": 1049,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1052,
                "keyType": {
                  "id": 1050,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "261:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "253:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2324
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1057,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "319:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "302:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1055,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1056,
              "nodeType": "ArrayTypeName",
              "src": "302:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "463:43:5",
              "statements": [
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1062,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "473:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "487:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:5"
                }
              ]
            },
            "id": 1067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "449:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "441:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:22:5"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:5"
            },
            "scope": 1225,
            "src": "429:77:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2329
            ],
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "567:39:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1072,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "584:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "584:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1074,
                  "nodeType": "Return",
                  "src": "577:22:5"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "521:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:5"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "561:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:6:5"
            },
            "scope": 1225,
            "src": "512:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2338
            ],
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "696:849:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "714:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1087,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "724:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "714:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "706:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "706:56:5"
                },
                {
                  "assignments": [
                    1093,
                    1095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "781:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "773:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "773:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1095,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "797:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "789:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "789:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1106,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1096,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "807:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1097,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "816:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "807:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1102,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "845:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1103,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "853:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1104,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "844:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "807:53:5",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1099,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "826:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1100,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "834:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1101,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "825:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1108,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "878:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "896:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "888:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1109,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "888:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "878:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        },
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "870:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "870:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1118,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "941:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1120,
                            "indexExpression": {
                              "id": 1119,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "949:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "941:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1122,
                          "indexExpression": {
                            "id": 1121,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "957:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "941:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "976:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "968:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "968:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "968:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "941:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        },
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "933:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "933:69:5"
                },
                {
                  "assignments": [
                    1132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1055:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "1042:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1137,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1134,
                          "name": "DBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2232,
                          "src": "1071:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$2232_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$2232_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        ],
                        "id": 1133,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1066:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:16:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_DBSwapPair_$2232",
                        "typeString": "type(contract DBSwapPair)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1066:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:53:5"
                },
                {
                  "assignments": [
                    1139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1139,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1113:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "1105:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1143,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "1147:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1144,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "1155:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1141,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1130:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1130:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:32:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1140,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1120:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1105:58:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1182:84:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1196:60:5",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:8:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1229:2:5",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1215:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1215:17:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:8:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1234:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1234:15:5"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1251:4:5"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:52:5"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1196:4:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1132,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1219:8:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1132,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1240:8:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1083,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1196:4:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1251:4:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 1148,
                  "nodeType": "InlineAssembly",
                  "src": "1173:93:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1153,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1304:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1154,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1312:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "1287:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1149,
                          "name": "IDBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1275:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDBSwapPair_$2479_$",
                            "typeString": "type(contract IDBSwapPair)"
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDBSwapPair_$2479",
                          "typeString": "contract IDBSwapPair"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1275:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:44:5"
                },
                {
                  "expression": {
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "1329:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1160,
                        "indexExpression": {
                          "id": 1158,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "1337:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1329:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1161,
                      "indexExpression": {
                        "id": 1159,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1345:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1329:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1162,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1355:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:30:5"
                },
                {
                  "expression": {
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1165,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "1369:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1168,
                        "indexExpression": {
                          "id": 1166,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1095,
                          "src": "1377:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1369:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1169,
                      "indexExpression": {
                        "id": 1167,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1385:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1369:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1170,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1395:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1176,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1468:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1173,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "1454:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1454:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1180,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1500:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1181,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1508:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1182,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1516:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1522:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1522:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1179,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "1488:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "EmitStatement",
                  "src": "1483:55:5"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "621:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "640:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "632:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "656:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "648:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:32:5"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "690:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "682:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:14:5"
            },
            "scope": 1225,
            "src": "612:933:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2343
            ],
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1594:96:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1196,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1626:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 1193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:55:5"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1201,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "1669:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1202,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "1677:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1669:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:14:5"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1560:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1577:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1569:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:16:5"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:5"
            },
            "scope": 1225,
            "src": "1551:139:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2348
            ],
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "1751:108:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1769:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1769:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1214,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1783:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1769:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 1211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:55:5"
                },
                {
                  "expression": {
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1219,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "1826:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1220,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "1840:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1826:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:26:5"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1705:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1728:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1720:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:22:5"
            },
            "returnParameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:5"
            },
            "scope": 1225,
            "src": "1696:163:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1226,
        "src": "128:1733:5",
        "usedErrors": []
      }
    ],
    "src": "33:1829:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapFactory.sol",
    "exportedSymbols": {
      "DBSwapERC20": [
        1038
      ],
      "DBSwapFactory": [
        1225
      ],
      "DBSwapPair": [
        2232
      ],
      "IDBSwapCallee": [
        2246
      ],
      "IDBSwapERC20": [
        2286
      ],
      "IDBSwapFactory": [
        2349
      ],
      "IDBSwapPair": [
        2479
      ],
      "IERC20": [
        2563
      ],
      "Math": [
        2639
      ],
      "UQ112x112": [
        2683
      ]
    },
    "id": 1226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1040,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/interfaces/IDBSwapFactory.sol",
        "file": "./interfaces/IDBSwapFactory.sol",
        "id": 1041,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 2350,
        "src": "58:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/uniswap-v2-core/DBSwapPair.sol",
        "file": "./DBSwapPair.sol",
        "id": 1042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 2233,
        "src": "100:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1043,
              "name": "IDBSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2349,
              "src": "154:14:5"
            },
            "id": 1044,
            "nodeType": "InheritanceSpecifier",
            "src": "154:14:5"
          }
        ],
        "canonicalName": "DBSwapFactory",
        "contractDependencies": [
          2232
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1225,
        "linearizedBaseContracts": [
          1225,
          2349
        ],
        "name": "DBSwapFactory",
        "nameLocation": "137:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2303
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1046,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "190:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "175:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1045,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2308
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1048,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "216:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "201:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2317
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1054,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "289:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "234:62:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1053,
              "keyType": {
                "id": 1049,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1052,
                "keyType": {
                  "id": 1050,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "261:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "253:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2324
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1057,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "319:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "302:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1055,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1056,
              "nodeType": "ArrayTypeName",
              "src": "302:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "463:43:5",
              "statements": [
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1062,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "473:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "487:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "473:26:5"
                }
              ]
            },
            "id": 1067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "449:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "441:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:22:5"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:5"
            },
            "scope": 1225,
            "src": "429:77:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2329
            ],
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "567:39:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1072,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "584:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "584:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1074,
                  "nodeType": "Return",
                  "src": "577:22:5"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "521:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:5"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "561:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:6:5"
            },
            "scope": 1225,
            "src": "512:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2338
            ],
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "696:849:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "714:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1087,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "724:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "714:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a204944454e544943414c5f414444524553534553",
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "DBSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ea2e216f69288417695848b02f590c2c1c76178d273c2d22ad65103d58b7eee",
                          "typeString": "literal_string \"DBSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "706:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "706:56:5"
                },
                {
                  "assignments": [
                    1093,
                    1095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "781:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "773:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "773:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1095,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "797:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "789:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "789:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1106,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1096,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "807:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1097,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "816:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "807:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1102,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "845:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1103,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "853:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1104,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "844:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "807:53:5",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1099,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "826:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1100,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "834:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1101,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "825:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "772:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1108,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "878:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "896:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "888:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1109,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "888:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "878:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a205a45524f5f41444452455353",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        },
                        "value": "DBSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b33dafdcb377bbe307afc21f1e5a8ae7798a21a1b00f483ff8b0bcd596be7ff",
                          "typeString": "literal_string \"DBSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "870:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "870:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1118,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "941:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1120,
                            "indexExpression": {
                              "id": 1119,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "949:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "941:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1122,
                          "indexExpression": {
                            "id": 1121,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "957:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "941:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "976:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "968:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "968:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "968:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "941:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20504149525f455849535453",
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        },
                        "value": "DBSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5e548b652484076ef81c228af804a5594840f807b45aac01b5591f0e0385ce",
                          "typeString": "literal_string \"DBSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "933:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "933:69:5"
                },
                {
                  "assignments": [
                    1132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1055:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "1042:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1137,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1134,
                          "name": "DBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2232,
                          "src": "1071:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$2232_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_DBSwapPair_$2232_$",
                            "typeString": "type(contract DBSwapPair)"
                          }
                        ],
                        "id": 1133,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1066:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:16:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_DBSwapPair_$2232",
                        "typeString": "type(contract DBSwapPair)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1066:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:53:5"
                },
                {
                  "assignments": [
                    1139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1139,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1113:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "1105:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1143,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "1147:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1144,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "1155:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1141,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1130:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1130:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1130:32:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1140,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1120:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1105:58:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1182:84:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1196:60:5",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:8:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1229:2:5",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1215:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1215:17:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:8:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1234:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1234:15:5"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1251:4:5"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:52:5"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1196:4:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1132,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1219:8:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1132,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1240:8:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1083,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1196:4:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1251:4:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 1148,
                  "nodeType": "InlineAssembly",
                  "src": "1173:93:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1153,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1304:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1154,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1312:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "1287:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1149,
                          "name": "IDBSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1275:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDBSwapPair_$2479_$",
                            "typeString": "type(contract IDBSwapPair)"
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1275:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDBSwapPair_$2479",
                          "typeString": "contract IDBSwapPair"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1275:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:44:5"
                },
                {
                  "expression": {
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "1329:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1160,
                        "indexExpression": {
                          "id": 1158,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "1337:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1329:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1161,
                      "indexExpression": {
                        "id": 1159,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1345:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1329:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1162,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1355:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:30:5"
                },
                {
                  "expression": {
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1165,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "1369:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1168,
                        "indexExpression": {
                          "id": 1166,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1095,
                          "src": "1377:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1369:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1169,
                      "indexExpression": {
                        "id": 1167,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1385:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1369:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1170,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1395:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1176,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1468:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1173,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "1454:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1454:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1180,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1500:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1181,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "1508:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1182,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "1516:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1183,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1522:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1522:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1179,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "1488:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "EmitStatement",
                  "src": "1483:55:5"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "621:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "640:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "632:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "656:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "648:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:32:5"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "690:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "682:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:14:5"
            },
            "scope": 1225,
            "src": "612:933:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2343
            ],
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "1594:96:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1196,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1626:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 1193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:55:5"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1201,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "1669:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1202,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "1677:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1669:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:14:5"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1560:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1577:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "1569:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:16:5"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:5"
            },
            "scope": 1225,
            "src": "1551:139:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2348
            ],
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "1751:108:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1769:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1769:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1214,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1783:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1769:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4442537761703a20464f5242494444454e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1796:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        },
                        "value": "DBSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a9d4222225c54608b8ad9c5a4ab5c508fccc5f2722fc9973fefbe369484dae3",
                          "typeString": "literal_string \"DBSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 1211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:55:5"
                },
                {
                  "expression": {
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1219,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "1826:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1220,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "1840:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1826:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:26:5"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1705:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1728:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1720:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:22:5"
            },
            "returnParameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:5"
            },
            "scope": 1225,
            "src": "1696:163:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1226,
        "src": "128:1733:5",
        "usedErrors": []
      }
    ],
    "src": "33:1829:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-05T13:48:48.712Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}